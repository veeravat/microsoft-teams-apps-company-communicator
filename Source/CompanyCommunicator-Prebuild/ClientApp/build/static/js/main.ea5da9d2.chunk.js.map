{"version":3,"sources":["configVariables.ts","components/config.tsx","i18n.ts","apis/axiosJWTDecorator.ts","apis/messageListApi.ts","actions/index.ts","components/OverFlow/sentMessageOverflow.tsx","components/Messages/messages.tsx","components/OverFlow/draftMessageOverflow.tsx","components/DraftMessages/draftMessages.tsx","components/TabContainer/tabContainer.tsx","components/AdaptiveCard/adaptiveCard.ts","utility/imageutility.tsx","components/common/TimePicker.tsx","components/common/LocalizedDatePicker.tsx","components/NewMessage/newMessage.tsx","components/StatusTaskModule/statusTaskModule.tsx","components/SendConfirmationTaskModule/sendConfirmationTaskModule.tsx","components/ErrorPage/errorPage.tsx","components/SignInPage/signInPage.tsx","components/SignInPage/signInSimpleStart.tsx","components/SignInPage/signInSimpleEnd.tsx","App.tsx","serviceWorker.ts","reducers/index.ts","index.tsx"],"names":["getBaseUrl","window","location","origin","Configuration","props","state","url","microsoftTeams","registerOnSaveHandler","saveEvent","setSettings","entityId","contentUrl","suggestedDisplayName","notifySuccess","setValidityState","className","React","Component","i18n","use","Backend","initReactI18next","init","fallbackLng","interpolation","escapeValue","formatDate","date","moment","format","formatDuration","startDate","endDate","result","search","locale","URLSearchParams","get","difference","diff","totalDuration","duration","hh","Math","floor","asHours","slice","formatNumber","parseInt","utc","asMilliseconds","number","Number","toLocaleString","AxiosJWTDecorator","handleError","needAuthorizationHeader","config","this","setupAuthorizationHeader","axios","delete","data","post","put","error","hasOwnProperty","errorStatus","response","status","href","language","Promise","resolve","reject","authTokenRequest","successCallback","token","defaults","headers","failureCallback","console","resources","getAuthToken","axiosJWTDecoratorInstance","baseAxiosUrl","getSentNotifications","getDraftNotifications","verifyGroupAccess","getGroups","id","searchGroups","query","exportNotification","payload","getSentNotification","getReactionsCount","getDraftNotification","deleteDraftNotification","duplicateDraftNotification","sendDraftNotification","updateDraftNotification","createDraftNotification","getTeams","getConsentSummaries","sendPreview","getAuthenticationConsentMetadata","windowLocationOriginDomain","login_hint","undefined","selectMessage","message","type","getMessagesList","dispatch","notificationList","forEach","notification","sendingStartedDate","sentDate","getDraftMessagesList","scheduledDateTime","Overflow","localize","onOpenTaskModule","event","title","taskInfo","height","width","fallbackUrl","startTask","err","duplicateDraftMessage","t","menuOpen","items","key","icon","MoreIcon","outline","active","indicator","menu","content","onClick","stopPropagation","setState","then","onMenuOpenChange","e","Menu","iconOnly","styles","overflowWithTranslation","withTranslation","connect","messagesList","Messages","interval","isOpenTaskModuleAllowed","processLabels","Flex","vAlign","fill","gap","Item","size","variables","grow","Text","truncated","weight","shrink","margin","renderSendingText","text","sentCount","succeeded","failed","unknown","totalMessageCount","messageContent","TooltipHost","calloutProps","gapSpace","AcceptIcon","xSpacing","CloseIcon","ExclamationCircleIcon","sentBy","escFunction","keyCode","submitTask","loader","bind","document","addEventListener","setInterval","removeEventListener","clearInterval","nextProps","keyCount","label","outList","map","allMessages","Loader","length","List","selectable","messagesWithTranslation","deleteDraftMessage","teamsChannelId","teamsTeamId","context","teamId","channelId","draftNotificationId","catch","messages","draftMessagesList","selectedMessage","DraftMessages","initializeIcons","itemsAccount","author","align","allDraftMessages","draftMessagesWithTranslation","TabContainer","onNewMessage","panels","column","hAlign","Button","primary","Accordion","defaultActiveIndex","tabContainerWithTranslation","AdaptiveCards","onProcessMarkdown","outputHtml","MarkdownIt","render","didProcess","getInitAdaptiveCard","setCardTitle","card","body","setCardImageLink","imageLink","setCardSummary","summary","setCardAuthor","setCardBtn","buttonTitle","buttonLink","actions","ImageUtil","makeInitialImage","name","canvas","createElement","style","display","appendChild","getContext","colorNum","ColorHash","hex","fillStyle","fillRect","font","split","len","first","initials","fillText","toUpperCase","toDataURL","removeChild","LanguageDirection","TimePicker","useTranslation","open","setOpen","hours","toString","padStart","minutes","setText","setHour","setMinute","minHours","setMinHour","minMinutes","setMinMinute","hoursItems","minutesItems","i","push","onHourChange","onAdd","item","onMinuteChange","popupContent","dir","Rtl","marginTop","Dropdown","value","placeholder","getA11ySelectionMessage","Popup","trapFocus","onOpenChange","onPickerClose","trigger","Input","disabled","isDisabled","fluid","ShiftActivityIcon","iconPosition","defaultProps","dayPickerStrings","months","shortMonths","days","shortDays","goToToday","onFormatDate","local","LocalizedDatePicker","theme","monthsShort","weekdays","weekdaysShort","useState","selectedDate","setDate","minDate","setMinDate","Fabric","Customizer","datePickerTheme","DatePicker","strings","showMonthPickerAsOverlay","isMonthPickerVisible","onSelectDate","startCycle","set","hour","minute","second","onDateSelect","toDate","disableSelection","NewMessage","fileInput","makeDropdownItems","resultedTeams","element","header","mail","image","team","makeDropdownItemList","fromItems","dropdownItemList","find","x","setDefaultCard","titleAsString","summaryAsString","authorAsString","buttonTitleAsString","imgUrl","getTeamList","teams","setGroupAccess","groupAccess","getGroupData","groups","getItem","draftMessageDetail","selectedRadioButton","rosters","allUsers","log","teamsOptionSelected","selectedTeamsNum","rostersOptionSelected","selectedRostersNum","groupsOptionSelected","selectedGroupsNum","selectedRadioBtn","selectedTeams","selectedRosters","selectedGroups","selectedRequestReadReceipt","ack","selectedInlineTranslation","inlineTranslation","selectedScheduledDateTime","Date","selectedDelayDelivery","fullWidth","notifyUser","btnLink","btnTitle","allUsersOptionSelected","updateCard","_handleReaderLoaded","readerEvt","binaryString","target","handleUploadClick","current","click","onRequestReadReceiptChanged","checked","onDelayDeliveryChanged","onInlineTranslationChanged","onDeliveryTimeChange","min","setHours","onDeliveryDateChangedOld","v","onDeliveryDateChanged","onGroupSelected","isSaveBtnDisabled","teamsSelectionIsValid","rostersSelectionIsValid","groupsSelectionIsValid","nothingSelected","isNextBtnDisabled","errorImageUrlMessage","errorButtonUrlMessage","getItems","remainingUserTeams","filter","findIndex","y","onTeamsChange","itemsData","MAX_SELECTED_TEAMS_NUM","onRostersChange","onGroupsChange","onGroupSearch","itemList","searchQuery","toLowerCase","indexOf","onGroupSearchQueryChange","noResultMessage","loading","encodeURIComponent","onSave","getElementsByClassName","classList","remove","selctedRosters","draftMessage","messageId","exists","editDraftMessage","postDraftMessage","onNext","page","onBack","onTitleChanged","showDefaultCard","onImageLinkChanged","startsWith","onSummaryChanged","onAuthorChanged","onBtnTitleChanged","onBtnLinkChanged","adaptiveCard","parse","renderedCard","container","firstChild","replaceWith","link","onExecuteAction","action","unstablePinned","handleImageSelection","params","match","file","files","mimeType","fileReader","FileReader","readAsDataURL","onload","Image","src","resizedImageAsBase64","MAX_WIDTH","alpha","drawImage","onerror","onChange","autoComplete","accept","multiple","ref","textAreaID","enabledButtons","strike","code","quote","h1","h2","h3","TextArea","autoFocus","RadioGroup","checkedValue","onCheckedValueChange","vertical","children","hidden","noResultsMessage","unstable_pinned","loadingMessage","getGroupItems","onSearchQueryChange","Checkbox","screenWidth","getHours","getMinutes","Ltr","labelPosition","secondary","newMessageWithTranslation","StatusTaskModule","initMessage","reactionsCount","sendingDuration","viewsCount","clicksCount","acknowledgementsCount","onClose","onExport","getItemList","media","avatar","renderAudienceSelection","teamNames","rosterNames","groupNames","renderErrorMessage","errorMessage","renderWarningMessage","warningMessage","canDownload","sendingCompleted","DownloadIcon","StatusTaskModuleWithTranslation","SendConfirmationTaskModule","onSendMessage","sort","sendConfirmationTaskModuleWithTranslation","ErrorPage","parseErrorMessage","SignInPage","authenticate","reason","SignInSimpleStart","useEffect","replace","upn","assign","SignInSimpleEnd","hashParams","hash","substr","s","k","decodeURIComponent","getHashParameters","notifyFailure","App","setThemeComponent","rtl","Provider","teamsDarkTheme","getAppDom","teamsHighContrastTheme","teamsTheme","updateTheme","themeStyle","ThemeStyle","Dark","HighContrast","Light","baseFontSize","fallback","exact","path","component","forceUpdate","changeLanguage","updateLocale","Boolean","hostname","combineReducers","draftMessages","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea5da9d2.chunk.js","sourcesContent":["// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nexport const getBaseUrl = (): string => {\r\n    return window.location.origin;\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport React from 'react';\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\nimport { getBaseUrl } from '../configVariables';\r\n\r\nexport interface IConfigState {\r\n    url: string;\r\n}\r\n\r\nclass Configuration extends React.Component<{}, IConfigState> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            url: getBaseUrl() + \"/messages?locale={locale}\"\r\n        }\r\n    }\r\n\r\n    public componentDidMount() {\r\n        microsoftTeams.initialize();\r\n\r\n        microsoftTeams.settings.registerOnSaveHandler((saveEvent) => {\r\n            microsoftTeams.settings.setSettings({\r\n                entityId: \"Company_Communicator_App\",\r\n                contentUrl: this.state.url,\r\n                suggestedDisplayName: \"Company Communicator\",\r\n            });\r\n            saveEvent.notifySuccess();\r\n        });\r\n\r\n        microsoftTeams.settings.setValidityState(true);\r\n\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className=\"configContainer\">\r\n                <h3>Please click Save to get started.</h3>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Configuration;\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport moment from 'moment';\r\nimport 'moment/min/locales.min';\r\n\r\nexport const defaultLocale = () => {\r\n    return 'en-US';\r\n} \r\n\r\ni18n\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n    .init({\r\n    fallbackLng: defaultLocale(),\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    }\r\n  });\r\n\r\nexport const updateLocale = () => {\r\n    const search = window.location.search;\r\n    const params = new URLSearchParams(search);\r\n    const locale = params.get(\"locale\") || defaultLocale();\r\n    i18n.changeLanguage(locale);\r\n    moment.locale(locale);\r\n};\r\n\r\nexport const formatDate = (date: string) => {\r\n    if (!date) return date;\r\n    return moment(date).format('l LT');\r\n}\r\n\r\nexport const formatDuration = (startDate: string, endDate: string) => {\r\n    let result = \"\";\r\n    const search = window.location.search;\r\n    const params = new URLSearchParams(search);\r\n    const locale = params.get(\"locale\") || defaultLocale();\r\n    if (startDate && endDate) {\r\n        const difference = moment(endDate).diff(moment(startDate));\r\n        const totalDuration = moment.duration(difference);\r\n        // Handling the scenario of duration being more than 24 hrs as it is not done by moment.js.\r\n        const hh = (\"0\" + Math.floor(totalDuration.asHours())).slice(-2);\r\n        result = formatNumber(parseInt(hh)) + moment.utc(totalDuration.asMilliseconds()).locale(locale).format(\":mm:ss\")\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const formatNumber = (number: any) => {\r\n    const search = window.location.search;\r\n    const params = new URLSearchParams(search);\r\n    const locale = params.get(\"locale\") || defaultLocale();\r\n    return Number(number).toLocaleString(locale);\r\n}\r\n\r\nexport default i18n;","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport axios, { AxiosResponse, AxiosRequestConfig } from \"axios\";\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\nimport i18n from '../i18n';\r\n\r\nexport class AxiosJWTDecorator {\r\n    public async get<T = any, R = AxiosResponse<T>>(\r\n        url: string,\r\n        handleError: boolean = true,\r\n        needAuthorizationHeader: boolean = true,\r\n        config?: AxiosRequestConfig,\r\n    ): Promise<R> {\r\n        try {\r\n            if (needAuthorizationHeader) {\r\n                config = await this.setupAuthorizationHeader(config);\r\n            }\r\n            return await axios.get(url, config);\r\n        } catch (error) {\r\n            if (handleError) {\r\n                this.handleError(error);\r\n                throw error;\r\n            }\r\n            else {\r\n                throw error;\r\n            }\r\n        }\r\n    }\r\n\r\n    public async delete<T = any, R = AxiosResponse<T>>(\r\n        url: string,\r\n        handleError: boolean = true,\r\n        config?: AxiosRequestConfig\r\n    ): Promise<R> {\r\n        try {\r\n            config = await this.setupAuthorizationHeader(config);\r\n            return await axios.delete(url, config);\r\n        } catch (error) {\r\n            if (handleError) {\r\n                this.handleError(error);\r\n                throw error;\r\n            }\r\n            else {\r\n                throw error;\r\n            }\r\n        }\r\n    }\r\n\r\n    public async post<T = any, R = AxiosResponse<T>>(\r\n        url: string,\r\n        data?: any,\r\n        handleError: boolean = true,\r\n        config?: AxiosRequestConfig\r\n    ): Promise<R> {\r\n        try {\r\n            config = await this.setupAuthorizationHeader(config);\r\n            return await axios.post(url, data, config);\r\n        } catch (error) {\r\n            if (handleError) {\r\n                this.handleError(error);\r\n                throw error;\r\n            }\r\n            else {\r\n                throw error;\r\n            }\r\n        }\r\n    }\r\n\r\n    public async put<T = any, R = AxiosResponse<T>>(\r\n        url: string,\r\n        data?: any,\r\n        handleError: boolean = true,\r\n        config?: AxiosRequestConfig\r\n    ): Promise<R> {\r\n        try {\r\n            config = await this.setupAuthorizationHeader(config);\r\n            return await axios.put(url, data, config);\r\n        } catch (error) {\r\n            if (handleError) {\r\n                this.handleError(error);\r\n                throw error;\r\n            }\r\n            else {\r\n                throw error;\r\n            }\r\n        }\r\n    }\r\n\r\n  private handleError(error: any): void {\r\n    if (error.hasOwnProperty(\"response\")) {\r\n      const errorStatus = error.response.status;\r\n      if (errorStatus === 403) {\r\n        window.location.href = `/errorpage/403?locale=${i18n.language}`;\r\n      } else if (errorStatus === 401) {\r\n        window.location.href = `/errorpage/401?locale=${i18n.language}`;\r\n      } else {\r\n        window.location.href = `/errorpage?locale=${i18n.language}`;\r\n      }\r\n    } else {\r\n      window.location.href = `/errorpage?locale=${i18n.language}`;\r\n    }\r\n  }\r\n\r\n    private async setupAuthorizationHeader(\r\n        config?: AxiosRequestConfig\r\n    ): Promise<AxiosRequestConfig> {\r\n        microsoftTeams.initialize();\r\n\r\n    return new Promise<AxiosRequestConfig>((resolve, reject) => {\r\n      const authTokenRequest = {\r\n        successCallback: (token: string) => {\r\n          if (!config) {\r\n            config = axios.defaults;\r\n          }\r\n          config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n          config.headers[\"Accept-Language\"] = i18n.language;\r\n          resolve(config);\r\n        },\r\n        failureCallback: (error: string) => {\r\n          // When the getAuthToken function returns a \"resourceRequiresConsent\" error, \r\n          // it means Azure AD needs the user's consent before issuing a token to the app. \r\n          // The following code redirects the user to the \"Sign in\" page where the user can grant the consent. \r\n          // Right now, the app redirects to the consent page for any error.\r\n          console.error(\"Error from getAuthToken: \", error);\r\n          window.location.href = `/signin?locale=${i18n.language}`;\r\n        },\r\n        resources: []\r\n      };\r\n      microsoftTeams.authentication.getAuthToken(authTokenRequest);\r\n    });\r\n  }\r\n}\r\n\r\nconst axiosJWTDecoratorInstance = new AxiosJWTDecorator();\r\nexport default axiosJWTDecoratorInstance;","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport axios from './axiosJWTDecorator';\r\nimport { getBaseUrl } from '../configVariables';\r\n\r\nlet baseAxiosUrl = getBaseUrl() + '/api';\r\n\r\nexport const getSentNotifications = async (): Promise<any> => {\r\n    let url = baseAxiosUrl + \"/sentnotifications\";\r\n    return await axios.get(url);\r\n}\r\n\r\nexport const getDraftNotifications = async (): Promise<any> => {\r\n    let url = baseAxiosUrl + \"/draftnotifications\";\r\n    return await axios.get(url);\r\n}\r\n\r\nexport const verifyGroupAccess = async (): Promise<any> => {\r\n    let url = baseAxiosUrl + \"/groupdata/verifyaccess\";\r\n    return await axios.get(url, false);\r\n}\r\n\r\nexport const getGroups = async (id: number): Promise<any> => {\r\n    let url = baseAxiosUrl + \"/groupdata/\" + id;\r\n    return await axios.get(url);\r\n}\r\n\r\nexport const searchGroups = async (query: string): Promise<any> => {\r\n    let url = baseAxiosUrl + \"/groupdata/search/\" + query;\r\n    return await axios.get(url);\r\n}\r\n\r\nexport const exportNotification = async(payload: {}): Promise<any> => {\r\n    let url = baseAxiosUrl + \"/exportnotification/export\";\r\n    return await axios.put(url, payload);\r\n}\r\n\r\nexport const getSentNotification = async (id: number): Promise<any> => {\r\n    let url = baseAxiosUrl + \"/sentnotifications/\" + id;\r\n    return await axios.get(url);\r\n}\r\n\r\nexport const getReactionsCount = async (id: number): Promise<any> => {\r\n    let url = baseAxiosUrl + \"/analytics/reactionscount/\" + id;\r\n    return await axios.get(url);\r\n}\r\n\r\nexport const getDraftNotification = async (id: number): Promise<any> => {\r\n    let url = baseAxiosUrl + \"/draftnotifications/\" + id;\r\n    return await axios.get(url);\r\n}\r\n\r\n\r\nexport const deleteDraftNotification = async (id: number): Promise<any> => {\r\n    let url = baseAxiosUrl + \"/draftnotifications/\" + id;\r\n    return await axios.delete(url);\r\n}\r\n\r\nexport const duplicateDraftNotification = async (id: number): Promise<any> => {\r\n    let url = baseAxiosUrl + \"/draftnotifications/duplicates/\" + id;\r\n    return await axios.post(url);\r\n}\r\n\r\nexport const sendDraftNotification = async (payload: {}): Promise<any> => {\r\n    let url = baseAxiosUrl + \"/sentnotifications\";\r\n    return await axios.post(url, payload);\r\n}\r\n\r\nexport const updateDraftNotification = async (payload: {}): Promise<any> => {\r\n    let url = baseAxiosUrl + \"/draftnotifications\";\r\n    return await axios.put(url, payload);\r\n}\r\n\r\nexport const createDraftNotification = async (payload: {}): Promise<any> => {\r\n    let url = baseAxiosUrl + \"/draftnotifications\";\r\n    return await axios.post(url, payload);\r\n}\r\n\r\nexport const getTeams = async (): Promise<any> => {\r\n    let url = baseAxiosUrl + \"/teamdata\";\r\n    return await axios.get(url);\r\n}\r\n\r\nexport const getConsentSummaries = async (id: number): Promise<any> => {\r\n    let url = baseAxiosUrl + \"/draftnotifications/consentSummaries/\" + id;\r\n    return await axios.get(url);\r\n}\r\n\r\nexport const sendPreview = async (payload: {}): Promise<any> => {\r\n    let url = baseAxiosUrl + \"/draftnotifications/previews\";\r\n    return await axios.post(url, payload);\r\n}\r\n\r\nexport const getAuthenticationConsentMetadata = async (windowLocationOriginDomain: string, login_hint: string): Promise<any> => {\r\n    let url = `${baseAxiosUrl}/authenticationMetadata/consentUrl?windowLocationOriginDomain=${windowLocationOriginDomain}&loginhint=${login_hint}`;\r\n    return await axios.get(url, undefined, false);\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport { formatDate } from '../i18n';\r\nimport { getSentNotifications, getDraftNotifications } from '../apis/messageListApi';\r\n\r\ntype Notification = {\r\n    createdDateTime: string,\r\n    failed: number,\r\n    id: string,\r\n    isCompleted: boolean,\r\n    sentDate: string,\r\n    sentBy: string,\r\n    sendingStartedDate: string,\r\n    sendingDuration: string,\r\n    succeeded: number,\r\n    throttled: number,\r\n    title: string,\r\n    totalMessageCount: number,\r\n}\r\n\r\nexport const selectMessage = (message: any) => {\r\n    return {\r\n        type: 'MESSAGE_SELECTED',\r\n        payload: message\r\n    };\r\n};\r\n\r\nexport const getMessagesList = () => async (dispatch: any) => {\r\n    const response = await getSentNotifications();\r\n    const notificationList: Notification[] = response.data;\r\n    notificationList.forEach(notification => {\r\n        notification.sendingStartedDate = formatDate(notification.sendingStartedDate);\r\n        notification.sentDate = formatDate(notification.sentDate);\r\n    });\r\n    dispatch({ type: 'FETCH_MESSAGES', payload: notificationList });\r\n};\r\n\r\nexport const getDraftMessagesList = () => async (dispatch: any) => {\r\n    const response = await getDraftNotifications();\r\n    const notificationList: any[] = response.data;\r\n    notificationList.forEach(notification => {\r\n        if (notification.scheduledDateTime != null) {\r\n            notification.scheduledDateTime = formatDate(notification.scheduledDateTime);\r\n        }\r\n    });\r\n    dispatch({ type: 'FETCH_DRAFTMESSAGES', payload: response.data });\r\n};","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withTranslation, WithTranslation } from \"react-i18next\";\r\nimport { Menu, MoreIcon } from '@fluentui/react-northstar';\r\nimport { getBaseUrl } from '../../configVariables';\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\nimport { duplicateDraftNotification } from '../../apis/messageListApi';\r\nimport { selectMessage, getMessagesList, getDraftMessagesList } from '../../actions';\r\nimport { TFunction } from \"i18next\";\r\n\r\nexport interface OverflowProps extends WithTranslation {\r\n    message?: any;\r\n    styles?: object;\r\n    title?: string;\r\n    selectMessage?: any;\r\n    getMessagesList?: any;\r\n    getDraftMessagesList?: any;\r\n}\r\n\r\nexport interface OverflowState {\r\n    menuOpen: boolean;\r\n}\r\n\r\nexport interface ITaskInfo {\r\n    title?: string;\r\n    height?: number;\r\n    width?: number;\r\n    url?: string;\r\n    card?: string;\r\n    fallbackUrl?: string;\r\n    completionBotId?: string;\r\n}\r\n\r\nclass Overflow extends React.Component<OverflowProps, OverflowState> {\r\n    readonly localize: TFunction;\r\n    constructor(props: OverflowProps) {\r\n        super(props);\r\n        this.localize = this.props.t;\r\n        this.state = {\r\n            menuOpen: false,\r\n        };\r\n    }\r\n\r\n    public componentDidMount() {\r\n        microsoftTeams.initialize();\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        const items = [\r\n            {\r\n                key: 'more',\r\n                icon: <MoreIcon outline={true} />,\r\n                menuOpen: this.state.menuOpen,\r\n                active: this.state.menuOpen,\r\n                indicator: false,\r\n                menu: {\r\n                    items: [\r\n                        {\r\n                            key: 'status',\r\n                            content: this.localize(\"ViewStatus\"),\r\n                            onClick: (event: any) => {\r\n                                event.stopPropagation();\r\n                                this.setState({\r\n                                    menuOpen: false,\r\n                                });\r\n                                let url = getBaseUrl() + \"/viewstatus/\" + this.props.message.id + \"?locale={locale}\";\r\n                                this.onOpenTaskModule(null, url, this.localize(\"ViewStatus\"));\r\n                            }\r\n                        },\r\n                        {\r\n                            key: 'duplicate',\r\n                            content: this.localize(\"Duplicate\"),\r\n                            onClick: (event: any) => {\r\n                                event.stopPropagation();\r\n                                this.setState({\r\n                                    menuOpen: false,\r\n                                });\r\n                                this.duplicateDraftMessage(this.props.message.id).then(() => {\r\n                                    this.props.getDraftMessagesList();\r\n                                });\r\n                            }\r\n                        },\r\n                    ],\r\n                },\r\n                onMenuOpenChange: (e: any, { menuOpen }: any) => {\r\n                    this.setState({\r\n                        menuOpen: menuOpen\r\n                    });\r\n                },\r\n            },\r\n        ];\r\n\r\n        return <Menu className=\"menuContainer\" iconOnly items={items} styles={this.props.styles} title={this.props.title} />;\r\n    }\r\n\r\n    private onOpenTaskModule = (event: any, url: string, title: string) => {\r\n        let taskInfo: ITaskInfo = {\r\n            url: url,\r\n            title: title,\r\n            height: 530,\r\n            width: 1000,\r\n            fallbackUrl: url,\r\n        };\r\n        let submitHandler = (err: any, result: any) => {\r\n        };\r\n        microsoftTeams.tasks.startTask(taskInfo, submitHandler);\r\n    }\r\n\r\n    private duplicateDraftMessage = async (id: number) => {\r\n        try {\r\n            await duplicateDraftNotification(id);\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return { messagesList: state.messagesList };\r\n}\r\n\r\nconst overflowWithTranslation = withTranslation()(Overflow);\r\nexport default connect(mapStateToProps, { selectMessage, getMessagesList, getDraftMessagesList })(overflowWithTranslation);\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withTranslation, WithTranslation } from \"react-i18next\";\r\nimport { TooltipHost } from 'office-ui-fabric-react';\r\nimport { Loader, List, Flex, Text, AcceptIcon, CloseIcon, ExclamationCircleIcon } from '@fluentui/react-northstar';\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\n\r\nimport { selectMessage, getMessagesList, getDraftMessagesList } from '../../actions';\r\nimport { getBaseUrl } from '../../configVariables';\r\nimport Overflow from '../OverFlow/sentMessageOverflow';\r\nimport './messages.scss';\r\nimport { TFunction } from \"i18next\";\r\nimport { formatNumber } from '../../i18n';\r\n\r\nexport interface ITaskInfo {\r\n    title?: string;\r\n    height?: number;\r\n    width?: number;\r\n    url?: string;\r\n    card?: string;\r\n    fallbackUrl?: string;\r\n    completionBotId?: string;\r\n}\r\n\r\nexport interface IMessage {\r\n    title: string;\r\n    sentDate: string;\r\n    sentby: string;\r\n    recipients: string;\r\n    acknowledgements?: string;\r\n    reactions?: string;\r\n    responses?: string;\r\n}\r\n\r\nexport interface IMessageProps extends WithTranslation {\r\n    messagesList: IMessage[];\r\n    selectMessage?: any;\r\n    getMessagesList?: any;\r\n    getDraftMessagesList?: any;\r\n}\r\n\r\nexport interface IMessageState {\r\n    message: IMessage[];\r\n    loader: boolean;\r\n}\r\n\r\nclass Messages extends React.Component<IMessageProps, IMessageState> {\r\n    readonly localize: TFunction;\r\n    private interval: any;\r\n    private isOpenTaskModuleAllowed: boolean;\r\n    constructor(props: IMessageProps) {\r\n        super(props);\r\n        this.localize = this.props.t;\r\n        this.isOpenTaskModuleAllowed = true;\r\n        this.state = {\r\n            message: this.props.messagesList,\r\n            loader: true,\r\n        };\r\n        this.escFunction = this.escFunction.bind(this);\r\n    }\r\n\r\n    public componentDidMount() {\r\n        microsoftTeams.initialize();\r\n        this.props.getMessagesList();\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n        this.interval = setInterval(() => {\r\n            this.props.getMessagesList();\r\n        }, 60000);\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    public componentWillReceiveProps(nextProps: any) {\r\n        if (this.props !== nextProps) {\r\n            this.setState({\r\n                message: nextProps.messagesList,\r\n                loader: false\r\n            });\r\n        }\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        let keyCount = 0;\r\n        const processItem = (message: any) => {\r\n            keyCount++;\r\n            const out = {\r\n                key: keyCount,\r\n                content: this.messageContent(message),\r\n                onClick: (): void => {\r\n                    let url = getBaseUrl() + \"/viewstatus/\" + message.id + \"?locale={locale}\";\r\n                    this.onOpenTaskModule(null, url, this.localize(\"ViewStatus\"));\r\n                },\r\n                styles: { margin: '0.2rem 0.2rem 0 0' },\r\n            };\r\n            return out;\r\n        };\r\n\r\n        const label = this.processLabels();\r\n        const outList = this.state.message.map(processItem);\r\n        const allMessages = [...label, ...outList];\r\n\r\n        if (this.state.loader) {\r\n            return (\r\n                <Loader />\r\n            );\r\n        } else if (this.state.message.length === 0) {\r\n            return (<div className=\"results\">{this.localize(\"EmptySentMessages\")}</div>);\r\n        }\r\n        else {\r\n            return (\r\n                <List selectable items={allMessages} className=\"list\" />\r\n            );\r\n        }\r\n    }\r\n\r\n    private processLabels = () => {\r\n        const out = [{\r\n            key: \"labels\",\r\n            content: (\r\n                <Flex vAlign=\"center\" fill gap=\"gap.small\">\r\n                    <Flex.Item size=\"size.quarter\" variables={{ 'size.quarter': '24%' }} grow={1} >\r\n                        <Text\r\n                            truncated\r\n                            weight=\"bold\"\r\n                            content={this.localize(\"TitleText\")}\r\n                        >\r\n                        </Text>\r\n                    </Flex.Item>\r\n                    <Flex.Item size=\"size.quarter\" variables={{ 'size.quarter': '12%' }}>\r\n                        <Text></Text>\r\n                    </Flex.Item>\r\n                    <Flex.Item size=\"size.quarter\" variables={{ 'size.quarter': '12%' }} shrink={false}>\r\n                        <Text\r\n                            truncated\r\n                            content={this.localize(\"Recipients\")}\r\n                            weight=\"bold\"\r\n                        >\r\n                        </Text>\r\n                    </Flex.Item>\r\n                    <Flex.Item size=\"size.quarter\" variables={{ 'size.quarter': '24%' }} shrink={false}>\r\n                        <Text\r\n                            truncated\r\n                            weight=\"bold\"\r\n                            content={this.localize(\"SentBy\")}\r\n                        >\r\n                        </Text>\r\n                    </Flex.Item>\r\n                    <Flex.Item size=\"size.quarter\" variables={{ 'size.quarter': '24%' }} >\r\n                        <Text\r\n                            truncated\r\n                            content={this.localize(\"Sent\")}\r\n                            weight=\"bold\"\r\n                        >\r\n                        </Text>\r\n                    </Flex.Item>\r\n                    <Flex.Item shrink={0} >\r\n                        <Overflow title=\"\" />\r\n                    </Flex.Item>\r\n                </Flex>\r\n            ),\r\n            styles: { margin: '0.2rem 0.2rem 0 0' },\r\n        }];\r\n        return out;\r\n    }\r\n\r\n    private renderSendingText = (message: any) => {\r\n        var text = \"\";\r\n        switch (message.status) {\r\n            case \"Queued\":\r\n                text = this.localize(\"Queued\");\r\n                break;\r\n            case \"SyncingRecipients\":\r\n                text = this.localize(\"SyncingRecipients\");\r\n                break;\r\n            case \"InstallingApp\":\r\n                text = this.localize(\"InstallingApp\");\r\n                break;\r\n            case \"Sending\":\r\n                let sentCount =\r\n                    (message.succeeded ? message.succeeded : 0) +\r\n                    (message.failed ? message.failed : 0) +\r\n                    (message.unknown ? message.unknown : 0);\r\n\r\n                text = this.localize(\"SendingMessages\", { \"SentCount\": formatNumber(sentCount), \"TotalCount\": formatNumber(message.totalMessageCount) });\r\n                break;\r\n            case \"Sent\":\r\n            case \"Failed\":\r\n                text = \"\";\r\n        }\r\n\r\n        return (<Text truncated content={text} />);\r\n    }\r\n\r\n    private messageContent = (message: any) => {\r\n        return (\r\n            <Flex className=\"listContainer\" vAlign=\"center\" fill gap=\"gap.small\">\r\n                <Flex.Item size=\"size.quarter\" variables={{ 'size.quarter': '24%' }} grow={1}>\r\n                    <Text\r\n                        truncated\r\n                        content={message.title}\r\n                    >\r\n                    </Text>\r\n                </Flex.Item>\r\n                <Flex.Item size=\"size.quarter\" variables={{ 'size.quarter': '12%' }}>\r\n                    {this.renderSendingText(message)}\r\n                </Flex.Item>\r\n                <Flex.Item size=\"size.quarter\" variables={{ 'size.quarter': '12%' }} shrink={false}>\r\n                    <div>\r\n                        <TooltipHost content={this.props.t(\"TooltipSuccess\")} calloutProps={{ gapSpace: 0 }}>\r\n                            <AcceptIcon xSpacing=\"after\" className=\"succeeded\" outline />\r\n                            <span className=\"semiBold\">{formatNumber(message.succeeded)}</span>\r\n                        </TooltipHost>\r\n                        <TooltipHost content={this.props.t(\"TooltipFailure\")} calloutProps={{ gapSpace: 0 }}>\r\n                            <CloseIcon xSpacing=\"both\" className=\"failed\" outline />\r\n                            <span className=\"semiBold\">{formatNumber(message.failed)}</span>\r\n                        </TooltipHost>\r\n                        {\r\n                            message.unknown &&\r\n                            <TooltipHost content=\"Unknown\" calloutProps={{ gapSpace: 0 }}>\r\n                                <ExclamationCircleIcon xSpacing=\"both\" className=\"unknown\" outline />\r\n                                <span className=\"semiBold\">{formatNumber(message.unknown)}</span>\r\n                            </TooltipHost>\r\n                        }\r\n                    </div>\r\n                </Flex.Item>\r\n                <Flex.Item size=\"size.quarter\" variables={{ 'size.quarter': '24%' }} >\r\n                    <Text\r\n                        truncated\r\n                        className=\"semiBold\"\r\n                        content={message.sentBy}\r\n                    />\r\n                </Flex.Item>\r\n                <Flex.Item size=\"size.quarter\" variables={{ 'size.quarter': '24%' }} >\r\n                    <Text\r\n                        truncated\r\n                        className=\"semiBold\"\r\n                        content={message.sentDate}\r\n                    />\r\n                </Flex.Item>\r\n                <Flex.Item shrink={0}>\r\n                    <Overflow message={message} title=\"\" />\r\n                </Flex.Item>\r\n            </Flex>\r\n        );\r\n    }\r\n\r\n    private escFunction = (event: any) => {\r\n        if (event.keyCode === 27 || (event.key === \"Escape\")) {\r\n            microsoftTeams.tasks.submitTask();\r\n        }\r\n    }\r\n\r\n    public onOpenTaskModule = (event: any, url: string, title: string) => {\r\n        if (this.isOpenTaskModuleAllowed) {\r\n            this.isOpenTaskModuleAllowed = false;\r\n            let taskInfo: ITaskInfo = {\r\n                url: url,\r\n                title: title,\r\n                height: 530,\r\n                width: 1000,\r\n                fallbackUrl: url,\r\n            }\r\n\r\n            let submitHandler = (err: any, result: any) => {\r\n                this.isOpenTaskModuleAllowed = true;\r\n            };\r\n\r\n            microsoftTeams.tasks.startTask(taskInfo, submitHandler);\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return { messagesList: state.messagesList };\r\n}\r\n\r\nconst messagesWithTranslation = withTranslation()(Messages);\r\nexport default connect(mapStateToProps, { selectMessage, getMessagesList, getDraftMessagesList })(messagesWithTranslation);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withTranslation, WithTranslation } from \"react-i18next\";\r\nimport { Menu, MoreIcon } from '@fluentui/react-northstar';\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\n\r\nimport { getBaseUrl } from '../../configVariables';\r\nimport { selectMessage, getMessagesList, getDraftMessagesList } from '../../actions';\r\nimport { deleteDraftNotification, duplicateDraftNotification, sendPreview } from '../../apis/messageListApi';\r\nimport { TFunction } from \"i18next\";\r\n\r\nexport interface OverflowProps extends WithTranslation {\r\n    message: any;\r\n    styles?: object;\r\n    title?: string;\r\n    selectMessage?: any;\r\n    getMessagesList?: any;\r\n    getDraftMessagesList?: any;\r\n}\r\n\r\nexport interface OverflowState {\r\n    teamsTeamId?: string;\r\n    teamsChannelId?: string;\r\n    menuOpen: boolean;\r\n}\r\n\r\nexport interface ITaskInfo {\r\n    title?: string;\r\n    height?: number;\r\n    width?: number;\r\n    url?: string;\r\n    card?: string;\r\n    fallbackUrl?: string;\r\n    completionBotId?: string;\r\n}\r\n\r\nclass Overflow extends React.Component<OverflowProps, OverflowState> {\r\n    readonly localize: TFunction;\r\n    constructor(props: OverflowProps) {\r\n        super(props);\r\n        this.localize = this.props.t;\r\n        this.state = {\r\n            teamsChannelId: '',\r\n            teamsTeamId: '',\r\n            menuOpen: false,\r\n        };\r\n    }\r\n\r\n    public componentDidMount() {\r\n        microsoftTeams.initialize();\r\n        microsoftTeams.getContext((context) => {\r\n            this.setState({\r\n                teamsTeamId: context.teamId,\r\n                teamsChannelId: context.channelId,\r\n            });\r\n        });\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        const items = [\r\n            {\r\n                key: 'more',\r\n                icon: <MoreIcon outline={true} />,\r\n                menuOpen: this.state.menuOpen,\r\n                active: this.state.menuOpen,\r\n                indicator: false,\r\n                menu: {\r\n                    items: [\r\n                        {\r\n                            key: 'send',\r\n                            content: this.localize(\"Send\"),\r\n                            onClick: (event: any) => {\r\n                                event.stopPropagation();\r\n                                this.setState({\r\n                                    menuOpen: false,\r\n                                });\r\n                                let url = getBaseUrl() + \"/sendconfirmation/\" + this.props.message.id + \"?locale={locale}\";\r\n                                this.onOpenTaskModule(null, url, this.localize(\"SendConfirmation\"));\r\n                            }\r\n                        },\r\n                        {\r\n                            key: 'preview',\r\n                            content: this.localize(\"PreviewInThisChannel\"),\r\n                            onClick: (event: any) => {\r\n                                event.stopPropagation();\r\n                                this.setState({\r\n                                    menuOpen: false,\r\n                                });\r\n                                let payload = {\r\n                                    draftNotificationId: this.props.message.id,\r\n                                    teamsTeamId: this.state.teamsTeamId,\r\n                                    teamsChannelId: this.state.teamsChannelId,\r\n                                }\r\n                                sendPreview(payload).then((response) => {\r\n                                    return response.status;\r\n                                }).catch((error) => {\r\n                                    return error;\r\n                                });\r\n                            }\r\n                        },\r\n                        {\r\n                            key: 'edit',\r\n                            content: this.localize(\"Edit\"),\r\n                            onClick: (event: any) => {\r\n                                event.stopPropagation();\r\n                                this.setState({\r\n                                    menuOpen: false,\r\n                                });\r\n                                let url = getBaseUrl() + \"/newmessage/\" + this.props.message.id + \"?locale={locale}\";\r\n                                this.onOpenTaskModule(null, url, this.localize(\"EditMessage\"));\r\n                            }\r\n                        },\r\n                        {\r\n                            key: 'duplicate',\r\n                            content: this.localize(\"Duplicate\"),\r\n                            onClick: (event: any) => {\r\n                                event.stopPropagation();\r\n                                this.setState({\r\n                                    menuOpen: false,\r\n                                });\r\n                                this.duplicateDraftMessage(this.props.message.id).then(() => {\r\n                                    this.props.getDraftMessagesList();\r\n                                });\r\n                            }\r\n                        },\r\n                        {\r\n                            key: 'delete',\r\n                            content: this.localize(\"Delete\"),\r\n                            onClick: (event: any) => {\r\n                                event.stopPropagation();\r\n                                this.setState({\r\n                                    menuOpen: false,\r\n                                });\r\n                                this.deleteDraftMessage(this.props.message.id).then(() => {\r\n                                    this.props.getDraftMessagesList();\r\n                                });\r\n                            }\r\n                        },\r\n                    ],\r\n                },\r\n                onMenuOpenChange: (e: any, { menuOpen }: any) => {\r\n                    this.setState({\r\n                        menuOpen: menuOpen\r\n                    });\r\n                },\r\n            },\r\n        ];\r\n\r\n        return <Menu className=\"menuContainer\" iconOnly items={items} styles={this.props.styles} title={this.props.title} />;\r\n    }\r\n\r\n    private onOpenTaskModule = (event: any, url: string, title: string) => {\r\n        let taskInfo: ITaskInfo = {\r\n            url: url,\r\n            title: title,\r\n            height: 530,\r\n            width: 1000,\r\n            fallbackUrl: url,\r\n        };\r\n\r\n        let submitHandler = (err: any, result: any) => {\r\n            this.props.getDraftMessagesList().then(() => {\r\n                this.props.getMessagesList();\r\n            });\r\n        };\r\n\r\n        microsoftTeams.tasks.startTask(taskInfo, submitHandler);\r\n    }\r\n\r\n    private duplicateDraftMessage = async (id: number) => {\r\n        try {\r\n            await duplicateDraftNotification(id);\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    private deleteDraftMessage = async (id: number) => {\r\n        try {\r\n            await deleteDraftNotification(id);\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return { messages: state.draftMessagesList, selectedMessage: state.selectedMessage };\r\n}\r\n\r\nconst overflowWithTranslation = withTranslation()(Overflow);\r\nexport default connect(mapStateToProps, { selectMessage, getDraftMessagesList, getMessagesList })(overflowWithTranslation);","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withTranslation, WithTranslation } from \"react-i18next\";\r\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\r\nimport { Loader, List, Flex, Text } from '@fluentui/react-northstar';\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\n\r\nimport './draftMessages.scss';\r\nimport { selectMessage, getDraftMessagesList, getMessagesList } from '../../actions';\r\nimport { getBaseUrl } from '../../configVariables';\r\nimport Overflow from '../OverFlow/draftMessageOverflow';\r\nimport { TFunction } from \"i18next\";\r\n\r\nexport interface ITaskInfo {\r\n    title?: string;\r\n    height?: number;\r\n    width?: number;\r\n    url?: string;\r\n    card?: string;\r\n    fallbackUrl?: string;\r\n    completionBotId?: string;\r\n}\r\n\r\nexport interface IMessage {\r\n    id: string;\r\n    title: string;\r\n    date: string;\r\n    recipients: string;\r\n    acknowledgements?: string;\r\n    reactions?: string;\r\n    responses?: string;\r\n}\r\n\r\nexport interface IMessageProps extends WithTranslation {\r\n    messages: IMessage[];\r\n    selectedMessage: any;\r\n    selectMessage?: any;\r\n    getDraftMessagesList?: any;\r\n    getMessagesList?: any;\r\n}\r\n\r\nexport interface IMessageState {\r\n    message: IMessage[];\r\n    itemsAccount: number;\r\n    loader: boolean;\r\n    teamsTeamId?: string;\r\n    teamsChannelId?: string;\r\n}\r\n\r\nclass DraftMessages extends React.Component<IMessageProps, IMessageState> {\r\n    readonly localize: TFunction;\r\n    private interval: any;\r\n    private isOpenTaskModuleAllowed: boolean;\r\n\r\n    constructor(props: IMessageProps) {\r\n        super(props);\r\n        initializeIcons();\r\n        this.localize = this.props.t;\r\n        this.isOpenTaskModuleAllowed = true;\r\n        this.state = {\r\n            message: props.messages,\r\n            itemsAccount: this.props.messages.length,\r\n            loader: true,\r\n            teamsTeamId: \"\",\r\n            teamsChannelId: \"\",\r\n        };\r\n    }\r\n\r\n    public componentDidMount() {\r\n        microsoftTeams.initialize();\r\n        microsoftTeams.getContext((context) => {\r\n            this.setState({\r\n                teamsTeamId: context.teamId,\r\n                teamsChannelId: context.channelId,\r\n            });\r\n        });\r\n        this.props.getDraftMessagesList();\r\n        this.interval = setInterval(() => {\r\n            this.props.getDraftMessagesList();\r\n        }, 60000);\r\n    }\r\n\r\n    public componentWillReceiveProps(nextProps: any) {\r\n        this.setState({\r\n            message: nextProps.messages,\r\n            loader: false\r\n        })\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        let keyCount = 0;\r\n        const processItem = (message: any) => {\r\n            keyCount++;\r\n            const out = {\r\n                key: keyCount,\r\n                content: (\r\n                    <Flex vAlign=\"center\" fill gap=\"gap.small\">\r\n                        <Flex.Item size=\"size.quarter\" variables={{ 'size.quarter': '24%' }} grow={1}>\r\n                            <Text\r\n                                truncated\r\n                                content={message.title}\r\n                            >\r\n                            </Text>\r\n                        </Flex.Item>\r\n                        <Flex.Item size=\"size.quarter\" variables={{ 'size.quarter': '24%' }} shrink={false}>\r\n                            <Text truncated className=\"semiBold\" content={message.author} />\r\n                        </Flex.Item>\r\n                        <Flex.Item size=\"size.quarter\" variables={{'size.quarter': '24%'}}>\r\n                            <Text truncated className=\"semiBold\" content={message.scheduledDateTime}/>\r\n                        </Flex.Item>\r\n                        <Flex.Item shrink={0} align=\"end\">\r\n                            <Overflow message={message} title=\"\" />\r\n                        </Flex.Item>\r\n                    </Flex>\r\n                ),\r\n                styles: { margin: '0.2rem 0.2rem 0 0' },\r\n                onClick: (): void => {\r\n                    let url = getBaseUrl() + \"/newmessage/\" + message.id + \"?locale={locale}\";\r\n                    this.onOpenTaskModule(null, url, this.localize(\"EditMessage\"));\r\n                },\r\n            };\r\n            return out;\r\n        };\r\n\r\n        const label = this.processLabels();\r\n        const outList = this.state.message.map(processItem);\r\n        const allDraftMessages = [...label, ...outList];\r\n\r\n        if (this.state.loader) {\r\n            return (\r\n                <Loader />\r\n            );\r\n        } else if (this.state.message.length === 0) {\r\n            return (<div className=\"results\">{this.localize(\"EmptyDraftMessages\")}</div>);\r\n        }\r\n        else {\r\n            return (\r\n                <List selectable items={allDraftMessages} className=\"list\" />\r\n            );\r\n        }\r\n    }\r\n\r\n    private processLabels = () => {\r\n        const out = [{\r\n            key: \"labels\",\r\n            content: (\r\n                <Flex vAlign=\"center\" fill gap=\"gap.small\">\r\n                    <Flex.Item size=\"size.quarter\" variables={{ 'size.quarter': '24%' }} grow={1}>\r\n                        <Text\r\n                            truncated\r\n                            weight=\"bold\"\r\n                            content={this.localize(\"TitleText\")}\r\n                        >\r\n                        </Text>\r\n                    </Flex.Item>\r\n                    <Flex.Item size=\"size.quarter\" variables={{ 'size.quarter': '24%' }}>\r\n                        <Text></Text>\r\n                    </Flex.Item>\r\n                    <Flex.Item size=\"size.quarter\" variables={{ 'size.quarter': '24%' }} shrink={false}>\r\n                        <Text\r\n                            truncated\r\n                            weight=\"bold\"\r\n                            content={this.localize(\"ModifiedBy\")}\r\n                        >\r\n                        </Text>\r\n                    </Flex.Item>\r\n                    <Flex.Item size=\"size.quarter\" variables={{'size.quarter': '24%'}}>\r\n                        <Text\r\n                            truncated\r\n                            weight=\"bold\"\r\n                            content={this.localize(\"ScheduledDateTimeText\")}\r\n                        >\r\n                        </Text>\r\n                    </Flex.Item>\r\n                    <Flex.Item shrink={0} >\r\n                        <Text></Text>\r\n                    </Flex.Item>\r\n                </Flex>\r\n            ),\r\n            styles: { margin: '0.2rem 0.2rem 0 0' },\r\n        }];\r\n        return out;\r\n    }\r\n\r\n    private onOpenTaskModule = (event: any, url: string, title: string) => {\r\n        if (this.isOpenTaskModuleAllowed) {\r\n            this.isOpenTaskModuleAllowed = false;\r\n            let taskInfo: ITaskInfo = {\r\n                url: url,\r\n                title: title,\r\n                height: 530,\r\n                width: 1000,\r\n                fallbackUrl: url,\r\n            }\r\n\r\n            let submitHandler = (err: any, result: any) => {\r\n                this.props.getDraftMessagesList().then(() => {\r\n                    this.props.getMessagesList();\r\n                    this.isOpenTaskModuleAllowed = true;\r\n                });\r\n            };\r\n\r\n            microsoftTeams.tasks.startTask(taskInfo, submitHandler);\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return { messages: state.draftMessagesList, selectedMessage: state.selectedMessage };\r\n}\r\n\r\nconst draftMessagesWithTranslation = withTranslation()(DraftMessages);\r\nexport default connect(mapStateToProps, { selectMessage, getDraftMessagesList, getMessagesList })(draftMessagesWithTranslation);","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport * as React from 'react';\r\nimport { withTranslation, WithTranslation } from \"react-i18next\";\r\nimport Messages from '../Messages/messages';\r\nimport DraftMessages from '../DraftMessages/draftMessages';\r\nimport './tabContainer.scss';\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\nimport { getBaseUrl } from '../../configVariables';\r\nimport { Accordion, Button, Flex } from '@fluentui/react-northstar';\r\nimport { getDraftMessagesList } from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport { TFunction } from \"i18next\";\r\n\r\ninterface ITaskInfo {\r\n    title?: string;\r\n    height?: number;\r\n    width?: number;\r\n    url?: string;\r\n    card?: string;\r\n    fallbackUrl?: string;\r\n    completionBotId?: string;\r\n}\r\n\r\nexport interface ITaskInfoProps extends WithTranslation {\r\n    getDraftMessagesList?: any;\r\n}\r\n\r\nexport interface ITabContainerState {\r\n    url: string;\r\n}\r\n\r\nclass TabContainer extends React.Component<ITaskInfoProps, ITabContainerState> {\r\n    readonly localize: TFunction;\r\n    constructor(props: ITaskInfoProps) {\r\n        super(props);\r\n        this.localize = this.props.t;\r\n        this.state = {\r\n            url: getBaseUrl() + \"/newmessage?locale={locale}\"\r\n        }\r\n        this.escFunction = this.escFunction.bind(this);\r\n    }\r\n\r\n    public componentDidMount() {\r\n        microsoftTeams.initialize();\r\n        //- Handle the Esc key\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    public escFunction(event: any) {\r\n        if (event.keyCode === 27 || (event.key === \"Escape\")) {\r\n            microsoftTeams.tasks.submitTask();\r\n        }\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        const panels = [\r\n            {\r\n                title: this.localize('DraftMessagesSectionTitle'),\r\n                content: {\r\n                    key: 'sent',\r\n                    content: (\r\n                        <DraftMessages></DraftMessages>\r\n                    ),\r\n                },\r\n            },\r\n            {\r\n                title: this.localize('SentMessagesSectionTitle'),\r\n                content: {\r\n                    key: 'draft',\r\n                    content: (\r\n                        <Messages></Messages>\r\n                    ),\r\n                },\r\n            }\r\n        ]\r\n        return (\r\n            <Flex className=\"tabContainer\" column fill gap=\"gap.small\">\r\n                <Flex className=\"newPostBtn\" hAlign=\"end\" vAlign=\"end\">\r\n                    <Button content={this.localize(\"NewMessage\")} onClick={this.onNewMessage} primary />\r\n                </Flex>\r\n                <Flex className=\"messageContainer\">\r\n                    <Flex.Item grow={1} >\r\n                        <Accordion defaultActiveIndex={[0, 1]} panels={panels} />\r\n                    </Flex.Item>\r\n                </Flex>\r\n            </Flex>\r\n        );\r\n    }\r\n\r\n    public onNewMessage = () => {\r\n        let taskInfo: ITaskInfo = {\r\n            url: this.state.url,\r\n            title: this.localize(\"NewMessage\"),\r\n            height: 530,\r\n            width: 1000,\r\n            fallbackUrl: this.state.url,\r\n        }\r\n\r\n        let submitHandler = (err: any, result: any) => {\r\n            this.props.getDraftMessagesList();\r\n        };\r\n\r\n        microsoftTeams.tasks.startTask(taskInfo, submitHandler);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return { messages: state.draftMessagesList };\r\n}\r\n\r\nconst tabContainerWithTranslation = withTranslation()(TabContainer);\r\nexport default connect(mapStateToProps, { getDraftMessagesList })(tabContainerWithTranslation);","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport * as AdaptiveCards from \"adaptivecards\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport { TFunction } from \"i18next\";\r\n\r\nAdaptiveCards.AdaptiveCard.onProcessMarkdown = function (text, result) {\r\n    //console.log(\"onProcessMarkdown occured\");\r\n    result.outputHtml = new MarkdownIt().render(text);\r\n    result.didProcess = true;\r\n}\r\n\r\nexport const getInitAdaptiveCard = (t: TFunction) => {\r\n    const titleTextAsString = t(\"TitleText\");\r\n    return (\r\n        {\r\n            \"type\": \"AdaptiveCard\",\r\n            \"body\": [\r\n                {\r\n                    \"type\": \"TextBlock\",\r\n                    \"weight\": \"Bolder\",\r\n                    \"text\": titleTextAsString,\r\n                    \"size\": \"ExtraLarge\",\r\n                    \"wrap\": true\r\n                },\r\n                {\r\n                    \"type\": \"Image\",\r\n                    \"spacing\": \"Default\",\r\n                    \"url\": \"\",\r\n                    \"size\": \"Stretch\",\r\n                    \"width\": \"400px\",\r\n                    \"altText\": \"\"\r\n                },\r\n                {\r\n                    \"type\": \"TextBlock\",\r\n                    \"text\": \"\",\r\n                    \"wrap\": true\r\n                },\r\n                {\r\n                    \"type\": \"TextBlock\",\r\n                    \"wrap\": true,\r\n                    \"size\": \"Small\",\r\n                    \"weight\": \"Lighter\",\r\n                    \"text\": \"\"\r\n                }\r\n            ],\r\n            \"$schema\": \"https://adaptivecards.io/schemas/adaptive-card.json\",\r\n            \"version\": \"1.0\"\r\n        }\r\n    );\r\n}\r\n\r\nexport const getCardTitle = (card: any) => {\r\n    return card.body[0].text;\r\n}\r\n\r\nexport const setCardTitle = (card: any, title: string) => {\r\n    card.body[0].text = title;\r\n}\r\n\r\nexport const getCardImageLink = (card: any) => {\r\n    return card.body[1].url;\r\n}\r\n\r\nexport const setCardImageLink = (card: any, imageLink?: string) => {\r\n    card.body[1].url = imageLink;\r\n}\r\n\r\nexport const getCardSummary = (card: any) => {\r\n    return card.body[2].text;\r\n}\r\n\r\nexport const setCardSummary = (card: any, summary?: string) => {\r\n    card.body[2].text = summary;\r\n}\r\n\r\nexport const getCardAuthor = (card: any) => {\r\n    return card.body[3].text;\r\n}\r\n\r\nexport const setCardAuthor = (card: any, author?: string) => {\r\n    card.body[3].text = author;\r\n}\r\n\r\nexport const getCardBtnTitle = (card: any) => {\r\n    return card.actions[0].title;\r\n}\r\n\r\nexport const getCardBtnLink = (card: any) => {\r\n    return card.actions[0].url;\r\n}\r\n\r\nexport const setCardBtn = (card: any, buttonTitle?: string, buttonLink?: string) => {\r\n    if (buttonTitle && buttonLink) {\r\n        card.actions = [\r\n            {\r\n                \"type\": \"Action.OpenUrl\",\r\n                \"title\": buttonTitle,\r\n                \"url\": buttonLink\r\n            }\r\n        ];\r\n    } else {\r\n        delete card.actions;\r\n    }\r\n}\r\n","import ColorHash from \"color-hash\";\r\n\r\nexport class ImageUtil {\r\n\r\n    public static makeInitialImage = (name: string) => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.style.display = 'none';\r\n        canvas.width = 32;\r\n        canvas.height = 32;\r\n        document.body.appendChild(canvas);\r\n        const context = canvas.getContext('2d');\r\n        if (context) {\r\n            let colorHash = new ColorHash();\r\n            const colorNum = colorHash.hex(name);\r\n            context.fillStyle = colorNum;\r\n            context.fillRect(0, 0, canvas.width, canvas.height);\r\n            context.font = \"16px Arial\";\r\n            context.fillStyle = \"#fff\";\r\n            const split = name.split(' ');\r\n            const len = split.length;\r\n            const first = split[0][0];\r\n            if (len > 1) {\r\n                const last = split[len - 1][0];\r\n                const initials = first + last;\r\n                context.fillText(initials.toUpperCase(), 3, 23);\r\n            } else {\r\n                context.fillText(first.toUpperCase(), 10, 23);\r\n            }\r\n            const data = canvas.toDataURL();\r\n            document.body.removeChild(canvas);\r\n            return data;\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n}","// <copyright file=\"timepicker.tsx\" company=\"Microsoft\">\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// </copyright>\r\n\r\nimport * as React from 'react';\r\nimport { Input, Popup, Flex, Dropdown, Text, ShiftActivityIcon } from '@fluentui/react-northstar';\r\nimport { useTranslation } from 'react-i18next';\r\nimport \"./timepicker.scss\";\r\n\r\nexport enum LanguageDirection {\r\n    /** Indicates that the language direction is right-to-left*/\r\n    Rtl = \"rtl\",\r\n\r\n    /** Indicates that the language direction is left-to-right*/\r\n    Ltr = \"ltr\",\r\n\r\n    /** Indicates that the language direction is auto*/\r\n    Auto = \"auto\",\r\n}\r\n\r\nexport interface ITimePickerProps {\r\n    onPickerClose: (hours: number, minutes: number) => void,\r\n    hours?: number,\r\n    minutes?: number,\r\n    minHours?: number,\r\n    minMinutes?: number,\r\n    isDisabled: boolean,\r\n    dir: LanguageDirection\r\n}\r\n\r\nconst TimePicker: React.FC<ITimePickerProps> = (props) => {\r\n    const localize = useTranslation().t;\r\n    const [open, setOpen] = React.useState(false);\r\n    const [text, setText] = React.useState(props.hours!.toString().padStart(2, '0') + \":\" + props.minutes!.toString().padStart(2, '0'));\r\n    const [hours, setHour] = React.useState(props.hours!.toString().padStart(2, '0'));\r\n    const [minutes, setMinute] = React.useState(props.minutes!.toString().padStart(2, '0'));\r\n    const [minHours, setMinHour] = React.useState(props.minHours!);\r\n    const [minMinutes, setMinMinute] = React.useState(props.minMinutes!);\r\n\r\n    const hoursItems: Array<string> = [];\r\n    const minutesItems: Array<string> = [];\r\n\r\n    //var date: Date = new Date(Date.UTC(2012, 11, 12, 3, 0, 0));\r\n    //// toLocaleTimeString() without arguments depends on the implementation,\r\n    //// the default locale, and the default time zone\r\n    //console.log(date.toLocaleTimeString());\r\n    //// → \"7:00:00 PM\" if run in en-US locale with time zone America/Los_Angeles\r\n\r\n    React.useEffect(() => {\r\n        setHour(props.hours!.toString().padStart(2, '0'));\r\n        setText(props.hours!.toString().padStart(2, '0') + \":\" + props.minutes!.toString().padStart(2, '0'));\r\n    }, [props.hours]);\r\n    React.useEffect(() => {\r\n        setMinute(props.minutes!.toString().padStart(2, '0'));\r\n        setText(props.hours!.toString().padStart(2, '0') + \":\" + props.minutes!.toString().padStart(2, '0'));\r\n    }, [props.minutes]);\r\n    React.useEffect(() => {\r\n        setMinHour(props.minHours!);\r\n    }, [props.minHours]);\r\n    React.useEffect(() => {\r\n        setMinMinute(props.minMinutes!);\r\n    }, [props.minMinutes]);\r\n\r\n\r\n    //const getTimePickerItem = (hours: number, minutes: number, locale: string = navigator.language): void => {\r\n    //    let timePickerItem: any = {\r\n    //        hours: hours,\r\n    //        minutes: minutes,\r\n    //        value: hours + \":\" + minutes,\r\n    //        asString: null\r\n    //    };\r\n    //    let date = new Date();\r\n    //    date.setHours(hours);\r\n    //    date.setMinutes(minutes);\r\n    //    timePickerItem.asString = date.toLocaleTimeString(locale,\r\n    //        { hour: \"2-digit\", minute: \"2-digit\", hour12: true });\r\n    //    //return timePickerItem;\r\n    //    console.log(timePickerItem.asString);\r\n    //}\r\n\r\n\r\n    for (var i = minHours ? minHours : 0; i < 24; i++) {\r\n        hoursItems.push(i.toString().padStart(2, '0'));\r\n        //getTimePickerItem(i, 0);\r\n    }\r\n    for (var i = 1; i < 12; i++) {\r\n        minutesItems.push((i * 5).toString().padStart(2, '0'));\r\n    }\r\n\r\n\r\n\r\n\r\n    const onHourChange = {\r\n\r\n\r\n        onAdd: (item: any) => {\r\n            if (item) {\r\n                setHour(item);\r\n            }\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    const onMinuteChange = {\r\n        onAdd: (item: any) => {\r\n            if (item) {\r\n                setMinute(item);\r\n            }\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    const onOpenChange = (e: any, { open }: any) => {\r\n        setOpen(open)\r\n        if (!open) {\r\n            setText(hours + \":\" + minutes);\r\n            props.onPickerClose(parseInt(hours), parseInt(minutes));\r\n        }\r\n    }\r\n\r\n    const popupContent = (\r\n        <div className=\"timepicker-popup-style\">\r\n            <Flex gap=\"gap.small\">\r\n                <Flex.Item size=\"size.half\">\r\n                    <Text size={props.dir === LanguageDirection.Rtl ? \"medium\" : \"small\"} content={localize(\"hourPlaceholder\")} />\r\n                </Flex.Item>\r\n                <Flex.Item size=\"size.half\" className={props.dir === LanguageDirection.Rtl ? \"rtl-right-margin-large\" : \"\"}>\r\n                    <Text size={props.dir === LanguageDirection.Rtl ? \"medium\" : \"small\"} content={localize(\"minutePlaceholder\")} />\r\n                </Flex.Item>\r\n            </Flex>\r\n            <Flex gap=\"gap.small\" styles={{ marginTop: \"0.5rem\" }}>\r\n                <Flex.Item>\r\n                    <Dropdown\r\n                        className=\"timepicker-dropdown\"\r\n                        items={hoursItems}\r\n                        value={hours}\r\n                        placeholder={localize(\"hourPlaceholder\")}\r\n                        getA11ySelectionMessage={onHourChange}\r\n                    />\r\n                </Flex.Item>\r\n                <Flex.Item>\r\n                    <Dropdown\r\n                        className={props.dir === LanguageDirection.Rtl ? \"timepicker-dropdown rtl-right-margin-small\" : \"timepicker-dropdown\"}\r\n                        value={minutes}\r\n                        items={minutesItems}\r\n                        placeholder={localize(\"minutePlaceholder\")}\r\n                        getA11ySelectionMessage={onMinuteChange}\r\n                    />\r\n                </Flex.Item>\r\n            </Flex>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Popup className=\"timepicker-popup-style\"\r\n            open={open}\r\n            trapFocus\r\n            onOpenChange={onOpenChange}\r\n            trigger={<Input style={{ \"width\": \"100px\" }}\r\n                className={props.dir === LanguageDirection.Rtl ? \"rtl-left-margin-small\" : \"\"}\r\n                disabled={props.isDisabled} fluid value={text} icon={<ShiftActivityIcon />}\r\n                iconPosition={props.dir === LanguageDirection.Rtl ? \"start\" : \"end\"}\r\n            />}\r\n            content={popupContent}\r\n        />\r\n    );\r\n}\r\n\r\nexport default TimePicker;\r\n\r\nTimePicker.defaultProps = {\r\n    hours: 0,\r\n    minutes: 0\r\n};","// <copyright file=\"date-picker.tsx\" company=\"Microsoft\">\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// </copyright>\r\n\r\nimport * as React from \"react\";\r\nimport moment from \"moment\";\r\nimport 'moment/min/locales.min';\r\nimport { Flex } from '@fluentui/react-northstar';\r\nimport { useState } from \"react\";\r\nimport { DatePicker } from 'office-ui-fabric-react/lib/DatePicker';\r\nimport { Fabric, Customizer, IDatePickerStrings  } from 'office-ui-fabric-react/lib';\r\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\r\n//import { DarkCustomizations } from \"../../../helpers/dark-customizations\";\r\n//import { DefaultCustomizations } from \"../../../helpers/default-customizations\";\r\n//import Constants from \"../../../constants/resources\";\r\nimport \"./localizeddatepicker.scss\";\r\n\r\n\r\ninitializeIcons();\r\n\r\nlet dayPickerStrings: IDatePickerStrings = {\r\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\r\n    shortDays: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\r\n    goToToday: \"\"\r\n};\r\n\r\nconst onFormatDate = (date?: Date): string => {\r\n    return !date ? '' : moment.utc(date).local().format(\"LL\");\r\n};\r\n\r\ninterface IDateePickerProps {\r\n    selectedDate?: Date,\r\n    onDateSelect: (startDate: Date) => void,\r\n    theme: string,\r\n    screenWidth: number,\r\n    minDate: Date,\r\n    disableSelection: boolean\r\n}\r\n\r\nconst LocalizedDatePicker: React.FC<IDateePickerProps> = props => {\r\n    let bgcolor = \"default-datepicker\";\r\n    let theme = props.theme;\r\n    let datePickerTheme;\r\n\r\n    dayPickerStrings.months = moment.months();\r\n    dayPickerStrings.shortMonths = moment.monthsShort();\r\n    dayPickerStrings.days = moment.weekdays();\r\n    dayPickerStrings.shortDays = moment.weekdaysShort();\r\n\r\n    //if (theme === Constants.dark) {\r\n    //    bgcolor = \"dark-datepicker\";\r\n    //    datePickerTheme = DarkCustomizations\r\n    //}\r\n    //else if (theme === Constants.contrast) {\r\n    //    bgcolor = \"dark-datepicker\";\r\n    //    datePickerTheme = DarkCustomizations\r\n    //}\r\n    //else {\r\n    //    bgcolor = \"default-datepicker\";\r\n    //    datePickerTheme = DefaultCustomizations\r\n    //}\r\n\r\n    const [selectedDate, setDate] = useState<Date | null | undefined>(props.selectedDate);\r\n    const [minDate, setMinDate] = useState<Date | null | undefined>(props.minDate);\r\n\r\n    React.useEffect(() => {\r\n        setDate(props.selectedDate);\r\n    }, [props.selectedDate]);\r\n\r\n    React.useEffect(() => {\r\n        setMinDate(props.minDate);\r\n    }, [props.minDate]);\r\n\r\n    /**\r\n       * Handle change event for cycle start date picker.\r\n       * @param date | cycle start date.\r\n       */\r\n    const onSelectStartDate = (date: Date | null | undefined): void => {\r\n        let startCycle = moment(date)\r\n            .set('hour', moment().hour())\r\n            .set('minute', moment().minute())\r\n            .set('second', moment().second());\r\n        props.onDateSelect(startCycle.toDate()!);\r\n        setDate(startCycle.toDate());\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                <Flex gap=\"gap.small\">\r\n                    <Fabric className=\"full-width\" dir=\"ltr\">\r\n                        <Customizer {...datePickerTheme}>\r\n                            <DatePicker\r\n                                className={bgcolor}\r\n                                label={''}\r\n                                strings={dayPickerStrings}\r\n                                formatDate={onFormatDate}\r\n                                showMonthPickerAsOverlay={true}\r\n                                minDate={minDate!}\r\n                                isMonthPickerVisible={true}\r\n                                value={selectedDate!}\r\n                                onSelectDate={onSelectStartDate}\r\n                                disabled={props.disableSelection}\r\n                            />\r\n                        </Customizer>\r\n                    </Fabric>\r\n                </Flex>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LocalizedDatePicker;","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { withTranslation, WithTranslation } from \"react-i18next\";\r\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\r\nimport * as AdaptiveCards from \"adaptivecards\";\r\nimport { Button, Loader, Dropdown, Text, Flex, Input, TextArea, RadioGroup, Checkbox, Datepicker } from '@fluentui/react-northstar'\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\nimport { SimpleMarkdownEditor } from 'react-simple-markdown-editor';\r\n\r\nimport './newMessage.scss';\r\nimport './teamTheme.scss';\r\nimport { getDraftNotification, getTeams, createDraftNotification, updateDraftNotification, searchGroups, getGroups, verifyGroupAccess } from '../../apis/messageListApi';\r\nimport {\r\n    getInitAdaptiveCard, setCardTitle, setCardImageLink, setCardSummary,\r\n    setCardAuthor, setCardBtn\r\n} from '../AdaptiveCard/adaptiveCard';\r\nimport { getBaseUrl } from '../../configVariables';\r\nimport { ImageUtil } from '../../utility/imageutility';\r\nimport { TFunction } from \"i18next\";\r\nimport TimePicker, { LanguageDirection } from '../common/TimePicker';\r\nimport LocalizedDatePicker from '../common/LocalizedDatePicker';\r\n\r\ntype dropdownItem = {\r\n    key: string,\r\n    header: string,\r\n    content: string,\r\n    image: string,\r\n    team: {\r\n        id: string,\r\n    },\r\n}\r\n\r\nexport interface IDraftMessage {\r\n    id?: string,\r\n    title: string,\r\n    imageLink?: string,\r\n    summary?: string,\r\n    author: string,\r\n    buttonTitle?: string,\r\n    buttonLink?: string,\r\n    teams: any[],\r\n    rosters: any[],\r\n    groups: any[],\r\n    allUsers: boolean,\r\n\r\n    ack?: boolean,\r\n    delayDelivery?: boolean,\r\n    inlineTranslation?: boolean,\r\n    scheduledDateTime?: Date,\r\n    fullWidth?: boolean,\r\n    notifyUser?: boolean,\r\n}\r\n\r\nexport interface formState {\r\n    title: string,\r\n    summary?: string,\r\n    btnLink?: string,\r\n    imageLink?: string,\r\n    btnTitle?: string,\r\n    author: string,\r\n    card?: any,\r\n    page: string,\r\n    teamsOptionSelected: boolean,\r\n    rostersOptionSelected: boolean,\r\n    allUsersOptionSelected: boolean,\r\n    groupsOptionSelected: boolean,\r\n    teams?: any[],\r\n    groups?: any[],\r\n    exists?: boolean,\r\n    messageId: string,\r\n    loader: boolean,\r\n    groupAccess: boolean,\r\n    loading: boolean,\r\n    noResultMessage: string,\r\n    unstablePinned?: boolean,\r\n    selectedTeamsNum: number,\r\n    selectedRostersNum: number,\r\n    selectedGroupsNum: number,\r\n    selectedRadioBtn: string,\r\n    selectedTeams: dropdownItem[],\r\n    selectedRosters: dropdownItem[],\r\n    selectedGroups: dropdownItem[],\r\n    errorImageUrlMessage: string,\r\n    errorButtonUrlMessage: string,\r\n    selectedRequestReadReceipt?: boolean,\r\n    selectedDelayDelivery?: boolean,\r\n    selectedInlineTranslation?: boolean,\r\n    selectedScheduledDateTime?: Date,\r\n    fullWidth?: boolean,\r\n    notifyUser?: boolean,\r\n}\r\n\r\nexport interface INewMessageProps extends RouteComponentProps, WithTranslation {\r\n    getDraftMessagesList?: any;\r\n}\r\n\r\nclass NewMessage extends React.Component<INewMessageProps, formState> {\r\n    readonly localize: TFunction;\r\n    private card: any;\r\n    private fileInput: any;\r\n\r\n    constructor(props: INewMessageProps) {\r\n        super(props);\r\n        initializeIcons();\r\n        this.localize = this.props.t;\r\n        this.card = getInitAdaptiveCard(this.localize);\r\n        this.setDefaultCard(this.card);\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            summary: \"\",\r\n            author: \"\",\r\n            btnLink: \"\",\r\n            imageLink: \"\",\r\n            btnTitle: \"\",\r\n            card: this.card,\r\n            page: \"CardCreation\",\r\n            teamsOptionSelected: true,\r\n            rostersOptionSelected: false,\r\n            allUsersOptionSelected: false,\r\n            groupsOptionSelected: false,\r\n            messageId: \"\",\r\n            loader: true,\r\n            groupAccess: false,\r\n            loading: false,\r\n            noResultMessage: \"\",\r\n            unstablePinned: true,\r\n            selectedTeamsNum: 0,\r\n            selectedRostersNum: 0,\r\n            selectedGroupsNum: 0,\r\n            selectedRadioBtn: \"teams\",\r\n            selectedTeams: [],\r\n            selectedRosters: [],\r\n            selectedGroups: [],\r\n            selectedRequestReadReceipt: false,\r\n            selectedInlineTranslation: false,\r\n            selectedScheduledDateTime: new Date(),\r\n            errorImageUrlMessage: \"\",\r\n            errorButtonUrlMessage: \"\",\r\n        }\r\n\r\n        this.fileInput = React.createRef();\r\n        this.handleImageSelection = this.handleImageSelection.bind(this);\r\n    }\r\n\r\n    public async componentDidMount() {\r\n        microsoftTeams.initialize();\r\n        //- Handle the Esc key\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n        let params = this.props.match.params;\r\n        this.setGroupAccess();\r\n        this.getTeamList().then(() => {\r\n            if ('id' in params) {\r\n                let id = params['id'];\r\n                this.getItem(id).then(() => {\r\n                    const selectedTeams = this.makeDropdownItemList(this.state.selectedTeams, this.state.teams);\r\n                    const selectedRosters = this.makeDropdownItemList(this.state.selectedRosters, this.state.teams);\r\n                    this.setState({\r\n                        exists: true,\r\n                        messageId: id,\r\n                        selectedTeams: selectedTeams,\r\n                        selectedRosters: selectedRosters,\r\n                    })\r\n                });\r\n                this.getGroupData(id).then(() => {\r\n                    const selectedGroups = this.makeDropdownItems(this.state.groups);\r\n                    this.setState({\r\n                        selectedGroups: selectedGroups\r\n                    })\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    exists: false,\r\n                    loader: false\r\n                }, () => {\r\n                    let adaptiveCard = new AdaptiveCards.AdaptiveCard();\r\n                    adaptiveCard.parse(this.state.card);\r\n                    let renderedCard = adaptiveCard.render();\r\n                    document.getElementsByClassName('adaptiveCardContainer')[0].appendChild(renderedCard);\r\n                    if (this.state.btnLink) {\r\n                        let link = this.state.btnLink;\r\n                        adaptiveCard.onExecuteAction = function (action) { window.open(link, '_blank'); };\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    private makeDropdownItems = (items: any[] | undefined) => {\r\n        const resultedTeams: dropdownItem[] = [];\r\n        if (items) {\r\n            items.forEach((element) => {\r\n                resultedTeams.push({\r\n                    key: element.id,\r\n                    header: element.name,\r\n                    content: element.mail,\r\n                    image: ImageUtil.makeInitialImage(element.name),\r\n                    team: {\r\n                        id: element.id\r\n                    },\r\n\r\n                });\r\n            });\r\n        }\r\n        return resultedTeams;\r\n    }\r\n\r\n    private makeDropdownItemList = (items: any[], fromItems: any[] | undefined) => {\r\n        const dropdownItemList: dropdownItem[] = [];\r\n        items.forEach(element =>\r\n            dropdownItemList.push(\r\n                typeof element !== \"string\" ? element : {\r\n                    key: fromItems!.find(x => x.id === element).id,\r\n                    header: fromItems!.find(x => x.id === element).name,\r\n                    image: ImageUtil.makeInitialImage(fromItems!.find(x => x.id === element).name),\r\n                    team: {\r\n                        id: element\r\n                    }\r\n                })\r\n        );\r\n        return dropdownItemList;\r\n    }\r\n\r\n    public setDefaultCard = (card: any) => {\r\n        const titleAsString = this.localize(\"TitleText\");\r\n        const summaryAsString = this.localize(\"Summary\");\r\n        const authorAsString = this.localize(\"Author1\");\r\n        const buttonTitleAsString = this.localize(\"ButtonTitle\");\r\n\r\n        setCardTitle(card, titleAsString);\r\n        let imgUrl = getBaseUrl() + \"/image/imagePlaceholder.png\";\r\n        setCardImageLink(card, imgUrl);\r\n        setCardSummary(card, summaryAsString);\r\n        setCardAuthor(card, authorAsString);\r\n        setCardBtn(card, buttonTitleAsString, \"https://adaptivecards.io\");\r\n    }\r\n\r\n    private getTeamList = async () => {\r\n        try {\r\n            const response = await getTeams();\r\n            this.setState({\r\n                teams: response.data\r\n            });\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    private getGroupItems() {\r\n        if (this.state.groups) {\r\n            return this.makeDropdownItems(this.state.groups);\r\n        }\r\n        const dropdownItems: dropdownItem[] = [];\r\n        return dropdownItems;\r\n    }\r\n\r\n    private setGroupAccess = async () => {\r\n        await verifyGroupAccess().then(() => {\r\n            this.setState({\r\n                groupAccess: true\r\n            });\r\n        }).catch((error) => {\r\n            const errorStatus = error.response.status;\r\n            if (errorStatus === 403) {\r\n                this.setState({\r\n                    groupAccess: false\r\n                });\r\n            }\r\n            else {\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n\r\n    private getGroupData = async (id: number) => {\r\n        try {\r\n            const response = await getGroups(id);\r\n            this.setState({\r\n                groups: response.data\r\n            });\r\n        }\r\n        catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    private getItem = async (id: number) => {\r\n        try {\r\n            const response = await getDraftNotification(id);\r\n            const draftMessageDetail = response.data;\r\n            let selectedRadioButton = \"teams\";\r\n            if (draftMessageDetail.rosters.length > 0) {\r\n                selectedRadioButton = \"rosters\";\r\n            }\r\n            else if (draftMessageDetail.groups.length > 0) {\r\n                selectedRadioButton = \"groups\";\r\n            }\r\n            else if (draftMessageDetail.allUsers) {\r\n                selectedRadioButton = \"allUsers\";\r\n            }\r\n\r\n            console.log(draftMessageDetail.scheduledDateTime);\r\n            this.setState({\r\n                teamsOptionSelected: draftMessageDetail.teams.length > 0,\r\n                selectedTeamsNum: draftMessageDetail.teams.length,\r\n                rostersOptionSelected: draftMessageDetail.rosters.length > 0,\r\n                selectedRostersNum: draftMessageDetail.rosters.length,\r\n                groupsOptionSelected: draftMessageDetail.groups.length > 0,\r\n                selectedGroupsNum: draftMessageDetail.groups.length,\r\n                selectedRadioBtn: selectedRadioButton,\r\n                selectedTeams: draftMessageDetail.teams,\r\n                selectedRosters: draftMessageDetail.rosters,\r\n                selectedGroups: draftMessageDetail.groups,\r\n\r\n                selectedRequestReadReceipt: draftMessageDetail.ack,\r\n                selectedInlineTranslation: draftMessageDetail.inlineTranslation,\r\n                selectedScheduledDateTime: draftMessageDetail.scheduledDateTime !== null ? new Date(draftMessageDetail.scheduledDateTime) : draftMessageDetail.scheduledDateTime,\r\n\r\n                selectedDelayDelivery: draftMessageDetail.scheduledDateTime !== null,\r\n                \r\n                fullWidth: draftMessageDetail.fullWidth,\r\n                notifyUser: draftMessageDetail.notifyUser,\r\n            });\r\n\r\n            setCardTitle(this.card, draftMessageDetail.title);\r\n            setCardImageLink(this.card, draftMessageDetail.imageLink);\r\n            setCardSummary(this.card, draftMessageDetail.summary);\r\n            setCardAuthor(this.card, draftMessageDetail.author);\r\n            setCardBtn(this.card, draftMessageDetail.buttonTitle, draftMessageDetail.buttonLink);\r\n\r\n            this.setState({\r\n                title: draftMessageDetail.title,\r\n                summary: draftMessageDetail.summary,\r\n                btnLink: draftMessageDetail.buttonLink,\r\n                imageLink: draftMessageDetail.imageLink,\r\n                btnTitle: draftMessageDetail.buttonTitle,\r\n                author: draftMessageDetail.author,\r\n                allUsersOptionSelected: draftMessageDetail.allUsers,\r\n                loader: false\r\n            }, () => {\r\n                this.updateCard();\r\n            });\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    _handleReaderLoaded = (readerEvt: any) => {\r\n        const binaryString = readerEvt.target.result;\r\n        console.log(binaryString);\r\n    }\r\n\r\n    handleImageSelection() {\r\n        const file = this.fileInput.current.files[0];\r\n        const { type: mimeType } = file;\r\n        console.log('file.size: ' + file.size); console.log('mimeType: ' + mimeType);\r\n\r\n        const fileReader = new FileReader();\r\n        fileReader.readAsDataURL(file);\r\n        fileReader.onload = () => {\r\n            var image = new Image();\r\n            image.src = fileReader.result as string;\r\n            var resizedImageAsBase64 = fileReader.result as string;\r\n            console.log(\"resizedImageAsBase64: \" + resizedImageAsBase64.length);\r\n            image.onload = function (e: any) {\r\n                const MAX_WIDTH = 1024;\r\n                // access image size here \r\n                console.log('image.width: ' + image.width);\r\n                console.log('image.height: ' + image.height);\r\n                console.log('image.src.length: ' + image.src.length);\r\n\r\n                if (image.width > MAX_WIDTH) {\r\n                    const canvas = document.createElement('canvas');\r\n                    canvas.width = MAX_WIDTH;\r\n                    canvas.height = ~~(image.height * (MAX_WIDTH / image.width));\r\n                    const context = canvas.getContext('2d', { alpha: false });\r\n                    if (!context) {\r\n                        return;\r\n                    }\r\n                    context.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n                    resizedImageAsBase64 = canvas.toDataURL(mimeType);\r\n                    console.log(\"resizedImageAsBase64: after resizing: \" + resizedImageAsBase64.length);\r\n                }\r\n            }\r\n\r\n            setCardImageLink(this.card, resizedImageAsBase64);\r\n            this.updateCard();\r\n            //lets set the state with the image value\r\n            this.setState({\r\n                imageLink: resizedImageAsBase64\r\n            });\r\n        }\r\n\r\n        fileReader.onerror = (error) => {\r\n            //reject(error);\r\n        }\r\n    }\r\n\r\n    handleUploadClick = (event: any) => {\r\n        if (this.fileInput.current) {\r\n            this.fileInput.current.click();\r\n        }\r\n    }    \r\n\r\n    public render(): JSX.Element {\r\n        if (this.state.loader) {\r\n            return (\r\n                <div className=\"Loader\">\r\n                    <Loader />\r\n                </div>\r\n            );\r\n        } else {\r\n            if (this.state.page === \"CardCreation\") {\r\n                return (\r\n                    <div className=\"taskModule\">\r\n                        <Flex column className=\"formContainer\" vAlign=\"stretch\" gap=\"gap.small\">\r\n                            <Flex className=\"scrollableContent\">\r\n                                <Flex.Item size=\"size.half\">\r\n                                    <Flex column className=\"formContentContainer\">\r\n                                        <Input className=\"inputField\"\r\n                                            value={this.state.title}\r\n                                            label={this.localize(\"TitleText\")}\r\n                                            placeholder={this.localize(\"PlaceHolderTitle\")}\r\n                                            onChange={this.onTitleChanged}\r\n                                            autoComplete=\"off\"\r\n                                            fluid\r\n                                        />\r\n\r\n                                        <Flex gap=\"gap.small\" vAlign=\"end\">\r\n                                            <Input fluid className=\"inputField\"\r\n                                                value={this.state.imageLink}\r\n                                                label={this.localize(\"ImageURL\")}\r\n                                                placeholder={this.localize(\"ImageURL\")}\r\n                                                onChange={this.onImageLinkChanged}\r\n                                                error={!(this.state.errorImageUrlMessage === \"\")}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                            <Flex.Item push>\r\n                                                <Button onClick={this.handleUploadClick}\r\n                                                    size=\"medium\" className=\"inputField\"\r\n                                                    content={this.localize(\"UploadImage\")} iconPosition=\"before\" />\r\n                                            </Flex.Item>\r\n                                            <input type=\"file\" accept=\".jpg, .jpeg, .png, .gif\"\r\n                                                style={{ display: 'none' }}\r\n                                                multiple={false}\r\n                                                onChange={this.handleImageSelection}\r\n                                                ref={this.fileInput} />\r\n                                            <Text className={(this.state.errorImageUrlMessage === \"\") ? \"hide\" : \"show\"} error size=\"small\" content={this.state.errorImageUrlMessage} />\r\n                                        </Flex>\r\n                                        \r\n                                        <div className=\"textArea\">\r\n                                            <Text content={this.localize(\"Summary\")} />\r\n                                            <SimpleMarkdownEditor textAreaID={\"summaryTextArea\"}\r\n                                                enabledButtons={{\r\n                                                    strike: false,\r\n                                                    code: false,\r\n                                                    quote: false,\r\n                                                    h1: false,\r\n                                                    h2: false,\r\n                                                    h3: false,\r\n                                                    image: false\r\n                                                }} />\r\n                                            <TextArea\r\n                                                autoFocus\r\n                                                placeholder={this.localize(\"Summary\")}\r\n                                                value={this.state.summary}\r\n                                                onChange={this.onSummaryChanged}\r\n                                                id=\"summaryTextArea\"\r\n                                                fluid />\r\n                                        </div>\r\n\r\n                                        <Input className=\"inputField\"\r\n                                            value={this.state.author}\r\n                                            label={this.localize(\"Author\")}\r\n                                            placeholder={this.localize(\"Author\")}\r\n                                            onChange={this.onAuthorChanged}\r\n                                            autoComplete=\"off\"\r\n                                            fluid\r\n                                        />\r\n                                        <Input className=\"inputField\"\r\n                                            fluid\r\n                                            value={this.state.btnTitle}\r\n                                            label={this.localize(\"ButtonTitle\")}\r\n                                            placeholder={this.localize(\"ButtonTitle\")}\r\n                                            onChange={this.onBtnTitleChanged}\r\n                                            autoComplete=\"off\"\r\n                                        />\r\n                                        <Input className=\"inputField\"\r\n                                            fluid\r\n                                            value={this.state.btnLink}\r\n                                            label={this.localize(\"ButtonURL\")}\r\n                                            placeholder={this.localize(\"ButtonURL\")}\r\n                                            onChange={this.onBtnLinkChanged}\r\n                                            error={!(this.state.errorButtonUrlMessage === \"\")}\r\n                                            autoComplete=\"off\"\r\n                                        />\r\n                                        <Text className={(this.state.errorButtonUrlMessage === \"\") ? \"hide\" : \"show\"} error size=\"small\" content={this.state.errorButtonUrlMessage} />\r\n                                    </Flex>\r\n                                </Flex.Item>\r\n                                <Flex.Item size=\"size.half\">\r\n                                    <div className=\"adaptiveCardContainer\">\r\n                                    </div>\r\n                                </Flex.Item>\r\n                            </Flex>\r\n\r\n                            <Flex className=\"footerContainer\" vAlign=\"end\" hAlign=\"end\">\r\n                                <Flex className=\"buttonContainer\">\r\n                                    <Button content={this.localize(\"Next\")} disabled={this.isNextBtnDisabled()} id=\"saveBtn\" onClick={this.onNext} primary />\r\n                                </Flex>\r\n                            </Flex>\r\n\r\n                        </Flex>\r\n                    </div>\r\n                );\r\n            }\r\n            else if (this.state.page === \"AudienceSelection\") {\r\n                return (\r\n                    <div className=\"taskModule\">\r\n                        <Flex column className=\"formContainer\" vAlign=\"stretch\" gap=\"gap.small\">\r\n                            <Flex className=\"scrollableContent\">\r\n                                <Flex.Item size=\"size.half\">\r\n                                    <Flex column className=\"formContentContainer\">\r\n                                        <h3>{this.localize(\"SendHeadingText\")}</h3>\r\n                                        <RadioGroup\r\n                                            className=\"radioBtns\"\r\n                                            checkedValue={this.state.selectedRadioBtn}\r\n                                            onCheckedValueChange={this.onGroupSelected}\r\n                                            vertical={true}\r\n                                            items={[\r\n                                                {\r\n                                                    name: \"teams\",\r\n                                                    key: \"teams\",\r\n                                                    value: \"teams\",\r\n                                                    label: this.localize(\"SendToGeneralChannel\"),\r\n                                                    children: (Component, { name, ...props }) => {\r\n                                                        return (\r\n                                                            <Flex key={name} column>\r\n                                                                <Component {...props} />\r\n                                                                <Dropdown\r\n                                                                    hidden={!this.state.teamsOptionSelected}\r\n                                                                    placeholder={this.localize(\"SendToGeneralChannelPlaceHolder\")}\r\n                                                                    search\r\n                                                                    multiple\r\n                                                                    items={this.getItems()}\r\n                                                                    value={this.state.selectedTeams}\r\n                                                                    onChange={this.onTeamsChange}\r\n                                                                    noResultsMessage={this.localize(\"NoMatchMessage\")}\r\n                                                                />\r\n                                                            </Flex>\r\n                                                        )\r\n                                                    },\r\n                                                },\r\n                                                {\r\n                                                    name: \"rosters\",\r\n                                                    key: \"rosters\",\r\n                                                    value: \"rosters\",\r\n                                                    label: this.localize(\"SendToRosters\"),\r\n                                                    children: (Component, { name, ...props }) => {\r\n                                                        return (\r\n                                                            <Flex key={name} column>\r\n                                                                <Component {...props} />\r\n                                                                <Dropdown\r\n                                                                    hidden={!this.state.rostersOptionSelected}\r\n                                                                    placeholder={this.localize(\"SendToRostersPlaceHolder\")}\r\n                                                                    search\r\n                                                                    multiple\r\n                                                                    items={this.getItems()}\r\n                                                                    value={this.state.selectedRosters}\r\n                                                                    onChange={this.onRostersChange}\r\n                                                                    unstable_pinned={this.state.unstablePinned}\r\n                                                                    noResultsMessage={this.localize(\"NoMatchMessage\")}\r\n                                                                />\r\n                                                            </Flex>\r\n                                                        )\r\n                                                    },\r\n                                                },\r\n                                                {\r\n                                                    name: \"allUsers\",\r\n                                                    key: \"allUsers\",\r\n                                                    value: \"allUsers\",\r\n                                                    label: this.localize(\"SendToAllUsers\"),\r\n                                                    children: (Component, { name, ...props }) => {\r\n                                                        return (\r\n                                                            <Flex key={name} column>\r\n                                                                <Component {...props} />\r\n                                                                <div className={this.state.selectedRadioBtn === \"allUsers\" ? \"\" : \"hide\"}>\r\n                                                                    <div className=\"noteText\">\r\n                                                                        <Text error content={this.localize(\"SendToAllUsersNote\")} />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </Flex>\r\n                                                        )\r\n                                                    },\r\n                                                },\r\n                                                {\r\n                                                    name: \"groups\",\r\n                                                    key: \"groups\",\r\n                                                    value: \"groups\",\r\n                                                    label: this.localize(\"SendToGroups\"),\r\n                                                    children: (Component, { name, ...props }) => {\r\n                                                        return (\r\n                                                            <Flex key={name} column>\r\n                                                                <Component {...props} />\r\n                                                                <div className={this.state.groupsOptionSelected && !this.state.groupAccess ? \"\" : \"hide\"}>\r\n                                                                    <div className=\"noteText\">\r\n                                                                        <Text error content={this.localize(\"SendToGroupsPermissionNote\")} />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <Dropdown\r\n                                                                    className=\"hideToggle\"\r\n                                                                    hidden={!this.state.groupsOptionSelected || !this.state.groupAccess}\r\n                                                                    placeholder={this.localize(\"SendToGroupsPlaceHolder\")}\r\n                                                                    search={this.onGroupSearch}\r\n                                                                    multiple\r\n                                                                    loading={this.state.loading}\r\n                                                                    loadingMessage={this.localize(\"LoadingText\")}\r\n                                                                    items={this.getGroupItems()}\r\n                                                                    value={this.state.selectedGroups}\r\n                                                                    onSearchQueryChange={this.onGroupSearchQueryChange}\r\n                                                                    onChange={this.onGroupsChange}\r\n                                                                    noResultsMessage={this.state.noResultMessage}\r\n                                                                    unstable_pinned={this.state.unstablePinned}\r\n                                                                />\r\n                                                                <div className={this.state.groupsOptionSelected && this.state.groupAccess ? \"\" : \"hide\"}>\r\n                                                                    <div className=\"noteText\">\r\n                                                                        <Text error content={this.localize(\"SendToGroupsNote\")} />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </Flex>\r\n                                                        )\r\n                                                    },\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n\r\n                                        </RadioGroup>\r\n                                        <h3>{this.localize(\"SendOptions\")}</h3>\r\n                                        \r\n                                        <Checkbox label={this.localize(\"RequestReadReceipt\")}\r\n                                            checked={this.state.teamsOptionSelected ? false: this.state.selectedRequestReadReceipt}\r\n                                            onChange={this.onRequestReadReceiptChanged} disabled={this.state.teamsOptionSelected} />\r\n                                        <Checkbox label={this.localize(\"DelayDelivery\")} checked={this.state.selectedDelayDelivery}\r\n                                            onChange={this.onDelayDeliveryChanged} />\r\n                                        <Flex gap=\"gap.smaller\">\r\n                                            <Flex.Item>\r\n                                                <LocalizedDatePicker\r\n                                                    screenWidth={500}\r\n                                                    selectedDate={this.state.selectedScheduledDateTime}\r\n                                                    minDate={new Date()}\r\n                                                    onDateSelect={this.onDeliveryDateChanged}\r\n                                                    disableSelection={!this.state.selectedDelayDelivery} theme={\"\"}\r\n                                                />\r\n                                            </Flex.Item>\r\n                                            <Flex.Item>\r\n                                                <TimePicker\r\n                                                    hours={this.state.selectedScheduledDateTime === undefined ? 0 : new Date(this.state.selectedScheduledDateTime).getHours()}\r\n                                                    minutes={this.state.selectedScheduledDateTime === undefined ? 0 : new Date(this.state.selectedScheduledDateTime).getMinutes()}\r\n                                                    isDisabled={!this.state.selectedDelayDelivery}\r\n                                                    onPickerClose={this.onDeliveryTimeChange}\r\n                                                    dir={LanguageDirection.Ltr} />\r\n                                            </Flex.Item>                                                                                      \r\n                                        </Flex>\r\n                                    </Flex>\r\n                                </Flex.Item>\r\n                                <Flex.Item size=\"size.half\">\r\n                                    <div className=\"adaptiveCardContainer\">\r\n                                    </div>\r\n                                </Flex.Item>\r\n                            </Flex>\r\n                            <Flex className=\"footerContainer\" vAlign=\"end\" hAlign=\"end\">\r\n                                <Flex className=\"buttonContainer\" gap=\"gap.small\">\r\n                                    <Flex.Item push>\r\n                                        <Loader id=\"sendingLoader\" className=\"hiddenLoader sendingLoader\" size=\"smallest\" label={this.localize(\"PreparingMessageLabel\")} labelPosition=\"end\" />\r\n                                    </Flex.Item>\r\n                                    <Flex.Item push>\r\n                                        <Button content={this.localize(\"Back\")} onClick={this.onBack} secondary />\r\n                                    </Flex.Item>\r\n                                    <Button content={this.localize(\"SaveAsDraft\")} disabled={this.isSaveBtnDisabled()} id=\"saveBtn\" onClick={this.onSave} primary />\r\n                                </Flex>\r\n                            </Flex>\r\n                        </Flex>\r\n                    </div>\r\n                );\r\n            }\r\n            else {\r\n                return (<div>Error</div>);\r\n            }\r\n        }\r\n    }\r\n\r\n    private onRequestReadReceiptChanged = (event: any, data: any) => {\r\n        this.setState({\r\n            selectedRequestReadReceipt: data.checked,\r\n        });\r\n    }\r\n\r\n    private onDelayDeliveryChanged = (event: any, data: any) => {\r\n        this.setState({\r\n            selectedDelayDelivery: data.checked,\r\n        })\r\n    }\r\n\r\n    private onInlineTranslationChanged = (event: any, data: any) => {\r\n        this.setState({\r\n            selectedInlineTranslation: data.checked,\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n    * Event handler on start time change\r\n    */\r\n    private onDeliveryTimeChange = (hours: number, min: number) => {\r\n        var date = this.state.selectedScheduledDateTime === undefined ?\r\n            new Date(new Date().setHours(hours, min)) : new Date(new Date(this.state.selectedScheduledDateTime).setHours(hours, min));\r\n        this.setState({ selectedScheduledDateTime: date });\r\n    }\r\n\r\n    private onDeliveryDateChangedOld = (e: any, v: any) => {\r\n        console.log(this.state.selectedScheduledDateTime);\r\n        console.log(v.value);\r\n        this.setState({ selectedScheduledDateTime: v.value });\r\n    }\r\n\r\n    private onDeliveryDateChanged = (date: Date) => {\r\n        console.log(date);\r\n        this.setState({ selectedScheduledDateTime: date });\r\n    }\r\n\r\n\r\n    private onGroupSelected = (event: any, data: any) => {\r\n        this.setState({\r\n            selectedRadioBtn: data.value,\r\n            teamsOptionSelected: data.value === 'teams',\r\n            rostersOptionSelected: data.value === 'rosters',\r\n            groupsOptionSelected: data.value === 'groups',\r\n            allUsersOptionSelected: data.value === 'allUsers',\r\n            selectedTeams: data.value === 'teams' ? this.state.selectedTeams : [],\r\n            selectedTeamsNum: data.value === 'teams' ? this.state.selectedTeamsNum : 0,\r\n            selectedRosters: data.value === 'rosters' ? this.state.selectedRosters : [],\r\n            selectedRostersNum: data.value === 'rosters' ? this.state.selectedRostersNum : 0,\r\n            selectedGroups: data.value === 'groups' ? this.state.selectedGroups : [],\r\n            selectedGroupsNum: data.value === 'groups' ? this.state.selectedGroupsNum : 0,\r\n        });\r\n    }\r\n\r\n    private isSaveBtnDisabled = () => {\r\n        const teamsSelectionIsValid = (this.state.teamsOptionSelected && (this.state.selectedTeamsNum !== 0)) || (!this.state.teamsOptionSelected);\r\n        const rostersSelectionIsValid = (this.state.rostersOptionSelected && (this.state.selectedRostersNum !== 0)) || (!this.state.rostersOptionSelected);\r\n        const groupsSelectionIsValid = (this.state.groupsOptionSelected && (this.state.selectedGroupsNum !== 0)) || (!this.state.groupsOptionSelected);\r\n        const nothingSelected = (!this.state.teamsOptionSelected) && (!this.state.rostersOptionSelected) && (!this.state.groupsOptionSelected) && (!this.state.allUsersOptionSelected);\r\n        return (!teamsSelectionIsValid || !rostersSelectionIsValid || !groupsSelectionIsValid || nothingSelected)\r\n    }\r\n\r\n    private isNextBtnDisabled = () => {\r\n        const title = this.state.title;\r\n        const btnTitle = this.state.btnTitle;\r\n        const btnLink = this.state.btnLink;\r\n        return !(title && ((btnTitle && btnLink) || (!btnTitle && !btnLink)) && (this.state.errorImageUrlMessage === \"\") && (this.state.errorButtonUrlMessage === \"\"));\r\n    }\r\n\r\n    private getItems = () => {\r\n        const resultedTeams: dropdownItem[] = [];\r\n        if (this.state.teams) {\r\n            let remainingUserTeams = this.state.teams;\r\n            if (this.state.selectedRadioBtn !== \"allUsers\") {\r\n                if (this.state.selectedRadioBtn === \"teams\") {\r\n                    this.state.teams.filter(x => this.state.selectedTeams.findIndex(y => y.team.id === x.id) < 0);\r\n                }\r\n                else if (this.state.selectedRadioBtn === \"rosters\") {\r\n                    this.state.teams.filter(x => this.state.selectedRosters.findIndex(y => y.team.id === x.id) < 0);\r\n                }\r\n            }\r\n            remainingUserTeams.forEach((element) => {\r\n                resultedTeams.push({\r\n                    key: element.id,\r\n                    header: element.name,\r\n                    content: element.mail,\r\n                    image: ImageUtil.makeInitialImage(element.name),\r\n                    team: {\r\n                        id: element.id\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        return resultedTeams;\r\n    }\r\n\r\n    private static MAX_SELECTED_TEAMS_NUM: number = 20;\r\n\r\n    private onTeamsChange = (event: any, itemsData: any) => {\r\n        if (itemsData.value.length > NewMessage.MAX_SELECTED_TEAMS_NUM) return;\r\n        this.setState({\r\n            selectedTeams: itemsData.value,\r\n            selectedTeamsNum: itemsData.value.length,\r\n            selectedRosters: [],\r\n            selectedRostersNum: 0,\r\n            selectedGroups: [],\r\n            selectedGroupsNum: 0\r\n        })\r\n    }\r\n\r\n    private onRostersChange = (event: any, itemsData: any) => {\r\n        if (itemsData.value.length > NewMessage.MAX_SELECTED_TEAMS_NUM) return;\r\n        this.setState({\r\n            selectedRosters: itemsData.value,\r\n            selectedRostersNum: itemsData.value.length,\r\n            selectedTeams: [],\r\n            selectedTeamsNum: 0,\r\n            selectedGroups: [],\r\n            selectedGroupsNum: 0\r\n        })\r\n    }\r\n\r\n    private onGroupsChange = (event: any, itemsData: any) => {\r\n        this.setState({\r\n            selectedGroups: itemsData.value,\r\n            selectedGroupsNum: itemsData.value.length,\r\n            groups: [],\r\n            selectedTeams: [],\r\n            selectedTeamsNum: 0,\r\n            selectedRosters: [],\r\n            selectedRostersNum: 0\r\n        })\r\n    }\r\n\r\n    private onGroupSearch = (itemList: any, searchQuery: string) => {\r\n        const result = itemList.filter(\r\n            (item: { header: string; content: string; }) => (item.header && item.header.toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1) ||\r\n                (item.content && item.content.toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1),\r\n        )\r\n        return result;\r\n    }\r\n\r\n    private onGroupSearchQueryChange = async (event: any, itemsData: any) => {\r\n\r\n        if (!itemsData.searchQuery) {\r\n            this.setState({\r\n                groups: [],\r\n                noResultMessage: \"\",\r\n            });\r\n        }\r\n        else if (itemsData.searchQuery && itemsData.searchQuery.length <= 2) {\r\n            this.setState({\r\n                loading: false,\r\n                noResultMessage: this.localize(\"NoMatchMessage\"),\r\n            });\r\n        }\r\n        else if (itemsData.searchQuery && itemsData.searchQuery.length > 2) {\r\n            // handle event trigger on item select.\r\n            const result = itemsData.items && itemsData.items.find(\r\n                (item: { header: string; }) => item.header.toLowerCase() === itemsData.searchQuery.toLowerCase()\r\n            )\r\n            if (result) {\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                loading: true,\r\n                noResultMessage: \"\",\r\n            });\r\n\r\n            try {\r\n                const query = encodeURIComponent(itemsData.searchQuery);\r\n                const response = await searchGroups(query);\r\n                this.setState({\r\n                    groups: response.data,\r\n                    loading: false,\r\n                    noResultMessage: this.localize(\"NoMatchMessage\")\r\n                });\r\n            }\r\n            catch (error) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n\r\n    private onSave = () => {\r\n        let spanner = document.getElementsByClassName(\"sendingLoader\");\r\n        spanner[0].classList.remove(\"hiddenLoader\");\r\n\r\n        const selectedTeams: string[] = [];\r\n        const selctedRosters: string[] = [];\r\n        const selectedGroups: string[] = [];\r\n        this.state.selectedTeams.forEach(x => selectedTeams.push(x.team.id));\r\n        this.state.selectedRosters.forEach(x => selctedRosters.push(x.team.id));\r\n        this.state.selectedGroups.forEach(x => selectedGroups.push(x.team.id));\r\n\r\n        const draftMessage: IDraftMessage = {\r\n            id: this.state.messageId,\r\n            title: this.state.title,\r\n            imageLink: this.state.imageLink,\r\n            summary: this.state.summary,\r\n            author: this.state.author,\r\n            buttonTitle: this.state.btnTitle,\r\n            buttonLink: this.state.btnLink,\r\n            teams: selectedTeams,\r\n            rosters: selctedRosters,\r\n            groups: selectedGroups,\r\n            allUsers: this.state.allUsersOptionSelected,\r\n\r\n            ack: this.state.selectedRequestReadReceipt,\r\n            inlineTranslation: this.state.selectedInlineTranslation,\r\n            scheduledDateTime: this.state.selectedDelayDelivery ? this.state.selectedScheduledDateTime : undefined,\r\n            fullWidth: this.state.fullWidth,\r\n            notifyUser: this.state.notifyUser,\r\n        };\r\n\r\n        if (this.state.exists) {\r\n            this.editDraftMessage(draftMessage).then(() => {\r\n                microsoftTeams.tasks.submitTask();\r\n            });\r\n        } else {\r\n            this.postDraftMessage(draftMessage).then(() => {\r\n                microsoftTeams.tasks.submitTask();\r\n            });\r\n        }\r\n    }\r\n\r\n    private editDraftMessage = async (draftMessage: IDraftMessage) => {\r\n        try {\r\n            await updateDraftNotification(draftMessage);\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    private postDraftMessage = async (draftMessage: IDraftMessage) => {\r\n        try {\r\n            await createDraftNotification(draftMessage);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    public escFunction(event: any) {\r\n        if (event.keyCode === 27 || (event.key === \"Escape\")) {\r\n            microsoftTeams.tasks.submitTask();\r\n        }\r\n    }\r\n\r\n    private onNext = (event: any) => {\r\n        this.setState({\r\n            page: \"AudienceSelection\"\r\n        }, () => {\r\n            this.updateCard();\r\n        });\r\n    }\r\n\r\n    private onBack = (event: any) => {\r\n        this.setState({\r\n            page: \"CardCreation\"\r\n        }, () => {\r\n            this.updateCard();\r\n        });\r\n    }\r\n\r\n    private onTitleChanged = (event: any) => {\r\n        let showDefaultCard = (!event.target.value && !this.state.imageLink && !this.state.summary && !this.state.author && !this.state.btnTitle && !this.state.btnLink);\r\n        setCardTitle(this.card, event.target.value);\r\n        setCardImageLink(this.card, this.state.imageLink);\r\n        setCardSummary(this.card, this.state.summary);\r\n        setCardAuthor(this.card, this.state.author);\r\n        setCardBtn(this.card, this.state.btnTitle, this.state.btnLink);\r\n        this.setState({\r\n            title: event.target.value,\r\n            card: this.card\r\n        }, () => {\r\n            if (showDefaultCard) {\r\n                this.setDefaultCard(this.card);\r\n            }\r\n            this.updateCard();\r\n        });\r\n    }\r\n\r\n    private onImageLinkChanged = (event: any) => {\r\n        let url = event.target.value.toLowerCase();\r\n        if (!((url === \"\") || (url.startsWith(\"https://\") || (url.startsWith(\"data:image/png;base64,\")) || (url.startsWith(\"data:image/jpeg;base64,\")) || (url.startsWith(\"data:image/gif;base64,\"))))) {\r\n            this.setState({\r\n                errorImageUrlMessage: this.localize(\"ErrorURLMessage\")\r\n            });\r\n        } else {\r\n            this.setState({\r\n                errorImageUrlMessage: \"\"\r\n            });\r\n        }\r\n\r\n        let showDefaultCard = (!this.state.title && !event.target.value && !this.state.summary && !this.state.author && !this.state.btnTitle && !this.state.btnLink);\r\n        setCardTitle(this.card, this.state.title);\r\n        setCardImageLink(this.card, event.target.value);\r\n        setCardSummary(this.card, this.state.summary);\r\n        setCardAuthor(this.card, this.state.author);\r\n        setCardBtn(this.card, this.state.btnTitle, this.state.btnLink);\r\n        this.setState({\r\n            imageLink: event.target.value,\r\n            card: this.card\r\n        }, () => {\r\n            if (showDefaultCard) {\r\n                this.setDefaultCard(this.card);\r\n            }\r\n            this.updateCard();\r\n        });\r\n    }\r\n\r\n    private onSummaryChanged = (event: any) => {\r\n        let showDefaultCard = (!this.state.title && !this.state.imageLink && !event.target.value && !this.state.author && !this.state.btnTitle && !this.state.btnLink);\r\n        setCardTitle(this.card, this.state.title);\r\n        setCardImageLink(this.card, this.state.imageLink);\r\n        setCardSummary(this.card, event.target.value);\r\n        setCardAuthor(this.card, this.state.author);\r\n        setCardBtn(this.card, this.state.btnTitle, this.state.btnLink);\r\n        this.setState({\r\n            summary: event.target.value,\r\n            card: this.card\r\n        }, () => {\r\n            if (showDefaultCard) {\r\n                this.setDefaultCard(this.card);\r\n            }\r\n            this.updateCard();\r\n        });\r\n    }\r\n\r\n    private onAuthorChanged = (event: any) => {\r\n        let showDefaultCard = (!this.state.title && !this.state.imageLink && !this.state.summary && !event.target.value && !this.state.btnTitle && !this.state.btnLink);\r\n        setCardTitle(this.card, this.state.title);\r\n        setCardImageLink(this.card, this.state.imageLink);\r\n        setCardSummary(this.card, this.state.summary);\r\n        setCardAuthor(this.card, event.target.value);\r\n        setCardBtn(this.card, this.state.btnTitle, this.state.btnLink);\r\n        this.setState({\r\n            author: event.target.value,\r\n            card: this.card\r\n        }, () => {\r\n            if (showDefaultCard) {\r\n                this.setDefaultCard(this.card);\r\n            }\r\n            this.updateCard();\r\n        });\r\n    }\r\n\r\n    private onBtnTitleChanged = (event: any) => {\r\n        const showDefaultCard = (!this.state.title && !this.state.imageLink && !this.state.summary && !this.state.author && !event.target.value && !this.state.btnLink);\r\n        setCardTitle(this.card, this.state.title);\r\n        setCardImageLink(this.card, this.state.imageLink);\r\n        setCardSummary(this.card, this.state.summary);\r\n        setCardAuthor(this.card, this.state.author);\r\n        if (event.target.value && this.state.btnLink) {\r\n            setCardBtn(this.card, event.target.value, this.state.btnLink);\r\n            this.setState({\r\n                btnTitle: event.target.value,\r\n                card: this.card\r\n            }, () => {\r\n                if (showDefaultCard) {\r\n                    this.setDefaultCard(this.card);\r\n                }\r\n                this.updateCard();\r\n            });\r\n        } else {\r\n            delete this.card.actions;\r\n            this.setState({\r\n                btnTitle: event.target.value,\r\n            }, () => {\r\n                if (showDefaultCard) {\r\n                    this.setDefaultCard(this.card);\r\n                }\r\n                this.updateCard();\r\n            });\r\n        }\r\n    }\r\n\r\n    private onBtnLinkChanged = (event: any) => {\r\n        if (!(event.target.value === \"\" || event.target.value.toLowerCase().startsWith(\"https://\"))) {\r\n            this.setState({\r\n                errorButtonUrlMessage: this.localize(\"ErrorURLMessage\")\r\n            });\r\n        } else {\r\n            this.setState({\r\n                errorButtonUrlMessage: \"\"\r\n            });\r\n        }\r\n\r\n        const showDefaultCard = (!this.state.title && !this.state.imageLink && !this.state.summary && !this.state.author && !this.state.btnTitle && !event.target.value);\r\n        setCardTitle(this.card, this.state.title);\r\n        setCardSummary(this.card, this.state.summary);\r\n        setCardAuthor(this.card, this.state.author);\r\n        setCardImageLink(this.card, this.state.imageLink);\r\n        if (this.state.btnTitle && event.target.value) {\r\n            setCardBtn(this.card, this.state.btnTitle, event.target.value);\r\n            this.setState({\r\n                btnLink: event.target.value,\r\n                card: this.card\r\n            }, () => {\r\n                if (showDefaultCard) {\r\n                    this.setDefaultCard(this.card);\r\n                }\r\n                this.updateCard();\r\n            });\r\n        } else {\r\n            delete this.card.actions;\r\n            this.setState({\r\n                btnLink: event.target.value\r\n            }, () => {\r\n                if (showDefaultCard) {\r\n                    this.setDefaultCard(this.card);\r\n                }\r\n                this.updateCard();\r\n            });\r\n        }\r\n    }\r\n\r\n    private updateCard = () => {\r\n        const adaptiveCard = new AdaptiveCards.AdaptiveCard();\r\n        adaptiveCard.parse(this.state.card);\r\n        const renderedCard = adaptiveCard.render();\r\n        const container = document.getElementsByClassName('adaptiveCardContainer')[0].firstChild;\r\n        if (container != null) {\r\n            container.replaceWith(renderedCard);\r\n        } else {\r\n            document.getElementsByClassName('adaptiveCardContainer')[0].appendChild(renderedCard);\r\n        }\r\n        const link = this.state.btnLink;\r\n        adaptiveCard.onExecuteAction = function (action) { window.open(link, '_blank'); }\r\n    }\r\n}\r\n\r\nconst newMessageWithTranslation = withTranslation()(NewMessage);\r\nexport default newMessageWithTranslation;\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport * as React from 'react';\r\nimport { withTranslation, WithTranslation } from \"react-i18next\";\r\nimport './statusTaskModule.scss';\r\nimport { getSentNotification, exportNotification, getReactionsCount } from '../../apis/messageListApi';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport * as AdaptiveCards from \"adaptivecards\";\r\nimport { TooltipHost } from 'office-ui-fabric-react';\r\nimport { Loader, List, Image, Button, DownloadIcon, AcceptIcon, Flex } from '@fluentui/react-northstar';\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\nimport {\r\n    getInitAdaptiveCard, setCardTitle, setCardImageLink, setCardSummary,\r\n    setCardAuthor, setCardBtn\r\n} from '../AdaptiveCard/adaptiveCard';\r\nimport { ImageUtil } from '../../utility/imageutility';\r\nimport { formatDate, formatDuration, formatNumber } from '../../i18n';\r\nimport { TFunction } from \"i18next\";\r\n\r\nexport interface IListItem {\r\n    header: string,\r\n    media: JSX.Element,\r\n}\r\n\r\nexport interface IMessage {\r\n    id: string;\r\n    title: string;\r\n    acknowledgements?: string;\r\n    reactions?: string;\r\n    responses?: string;\r\n    succeeded?: string;\r\n    viewsCount?: string;\r\n    clicksCount?: string;\r\n    acknowledgementsCount?: string;\r\n    reactionsCount?: string;\r\n    failed?: string;\r\n    unknown?: string;\r\n    sentDate?: string;\r\n    sentBy?: string;\r\n    imageLink?: string;\r\n    summary?: string;\r\n    author?: string;\r\n    buttonLink?: string;\r\n    buttonTitle?: string;\r\n    teamNames?: string[];\r\n    rosterNames?: string[];\r\n    groupNames?: string[];\r\n    allUsers?: boolean;\r\n    sendingStartedDate?: string;\r\n    sendingDuration?: string;\r\n    errorMessage?: string;\r\n    warningMessage?: string;\r\n    canDownload?: boolean;\r\n    sendingCompleted?: boolean;\r\n}\r\n\r\nexport interface IStatusState {\r\n    message: IMessage;\r\n    loader: boolean;\r\n    page: string;\r\n    teamId?: string;\r\n    reactionsCount: number;\r\n}\r\n\r\ninterface StatusTaskModuleProps extends RouteComponentProps, WithTranslation { }\r\n\r\nclass StatusTaskModule extends React.Component<StatusTaskModuleProps, IStatusState> {\r\n    readonly localize: TFunction;\r\n    private initMessage = {\r\n        id: \"\",\r\n        title: \"\"\r\n    };\r\n\r\n    private card: any;\r\n\r\n    constructor(props: StatusTaskModuleProps) {\r\n        super(props);\r\n\r\n        this.localize = this.props.t;\r\n\r\n        this.card = getInitAdaptiveCard(this.props.t);\r\n\r\n        this.state = {\r\n            message: this.initMessage,\r\n            loader: true,\r\n            page: \"ViewStatus\",\r\n            teamId: '',\r\n            reactionsCount: 0,\r\n        };\r\n    }\r\n\r\n    public componentDidMount() {\r\n        let params = this.props.match.params;\r\n        microsoftTeams.initialize();\r\n        microsoftTeams.getContext((context) => {\r\n            this.setState({\r\n                teamId: context.teamId,\r\n            });\r\n        });\r\n\r\n        if ('id' in params) {\r\n            let id = params['id'];\r\n            this.getItem(id).then(() => {\r\n                this.setState({\r\n                    loader: false\r\n                }, () => {\r\n                    setCardTitle(this.card, this.state.message.title);\r\n                    setCardImageLink(this.card, this.state.message.imageLink);\r\n                    setCardSummary(this.card, this.state.message.summary);\r\n                    setCardAuthor(this.card, this.state.message.author);\r\n                    if (this.state.message.buttonTitle !== \"\" && this.state.message.buttonLink !== \"\") {\r\n                        setCardBtn(this.card, this.state.message.buttonTitle, this.state.message.buttonLink);\r\n                    }\r\n\r\n                    let adaptiveCard = new AdaptiveCards.AdaptiveCard();\r\n                    adaptiveCard.parse(this.card);\r\n                    let renderedCard = adaptiveCard.render();\r\n                    document.getElementsByClassName('adaptiveCardContainer')[0].appendChild(renderedCard);\r\n                    let link = this.state.message.buttonLink;\r\n                    adaptiveCard.onExecuteAction = function (action) { window.open(link, '_blank'); }\r\n                });\r\n            });\r\n            this.getReactionsCount(id);\r\n        }\r\n    }\r\n\r\n    private getReactionsCount = async (id: number) => {\r\n        try {\r\n            const response = await getReactionsCount(id);\r\n            response.data = formatNumber(response.data);\r\n            this.setState({\r\n                reactionsCount: response.data\r\n            });\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    private getItem = async (id: number) => {\r\n        try {\r\n            const response = await getSentNotification(id);\r\n            response.data.sendingDuration = formatDuration(response.data.sendingStartedDate, response.data.sentDate);\r\n            response.data.sendingStartedDate = formatDate(response.data.sendingStartedDate);\r\n            response.data.sentDate = formatDate(response.data.sentDate);\r\n            response.data.succeeded = formatNumber(response.data.succeeded);\r\n            response.data.viewsCount = formatNumber(response.data.viewsCount);\r\n            response.data.clicksCount = formatNumber(response.data.clicksCount);\r\n            response.data.acknowledgementsCount = formatNumber(response.data.acknowledgementsCount);\r\n            response.data.failed = formatNumber(response.data.failed);\r\n            response.data.unknown = response.data.unknown && formatNumber(response.data.unknown);\r\n            this.setState({\r\n                message: response.data\r\n            });\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        if (this.state.loader) {\r\n            return (\r\n                <div className=\"Loader\">\r\n                    <Loader />\r\n                </div>\r\n            );\r\n        } else {\r\n            if (this.state.page === \"ViewStatus\") {\r\n                return (\r\n                    <div className=\"taskModule\">\r\n                        <Flex column className=\"formContainer\" vAlign=\"stretch\" gap=\"gap.small\">\r\n                            <Flex className=\"scrollableContent\">\r\n                                <Flex.Item size=\"size.half\" className=\"formContentContainer\">\r\n                                    <Flex column>\r\n                                        <div className=\"contentField\">\r\n                                            <h3>{this.localize(\"TitleText\")}</h3>\r\n                                            <span>{this.state.message.title}</span>\r\n                                        </div>\r\n                                        <div className=\"contentField\">\r\n                                            <h3>{this.localize(\"SentBy\")}</h3>\r\n                                            <span>{this.state.message.sentBy}</span>\r\n                                        </div>\r\n                                        <div className=\"contentField\">\r\n                                            <h3>{this.localize(\"SendingStarted\")}</h3>\r\n                                            <span>{this.state.message.sendingStartedDate}</span>\r\n                                        </div>\r\n                                        <div className=\"contentField\">\r\n                                            <h3>{this.localize(\"Completed\")}</h3>\r\n                                            <span>{this.state.message.sentDate}</span>\r\n                                        </div>\r\n                                        <div className=\"contentField\">\r\n                                            <h3>{this.localize(\"Duration\")}</h3>\r\n                                            <span>{this.state.message.sendingDuration}</span>\r\n                                        </div>\r\n                                        <div className=\"contentField\">\r\n                                            <h3>{this.localize(\"Results\")}</h3>\r\n                                            <label>{this.localize(\"Success\", { \"SuccessCount\": this.state.message.succeeded })}</label>\r\n                                            <br />\r\n                                            <label>{this.localize(\"Views\", { \"ViewsCount\": this.state.message.viewsCount })}</label>\r\n                                            <br />\r\n                                            <label>{this.localize(\"Clicks\", { \"ClicksCount\": this.state.message.clicksCount })}</label>\r\n                                            <br />\r\n                                            <label>{this.localize(\"Acknowledgements\", { \"AcknowledgementsCount\": this.state.message.acknowledgementsCount })}</label>\r\n                                            <br />\r\n                                            <label>{this.localize(\"Reactions\", { \"ReactionsCount\": this.state.reactionsCount })}</label>\r\n\r\n                                            <br />\r\n                                            <label>{this.localize(\"Failure\", { \"FailureCount\": this.state.message.failed })}</label>\r\n                                            <br />\r\n                                            {this.state.message.unknown &&\r\n                                                <>\r\n                                                    <label>{this.localize(\"Unknown\", { \"UnknownCount\": this.state.message.unknown })}</label>\r\n                                                </>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"contentField\">\r\n                                            {this.renderAudienceSelection()}\r\n                                        </div>\r\n                                        <div className=\"contentField\">\r\n                                            {this.renderErrorMessage()}\r\n                                        </div>\r\n                                        <div className=\"contentField\">\r\n                                            {this.renderWarningMessage()}\r\n                                        </div>\r\n                                    </Flex>\r\n                                </Flex.Item>\r\n                                <Flex.Item size=\"size.half\">\r\n                                    <div className=\"adaptiveCardContainer\">\r\n                                    </div>\r\n                                </Flex.Item>\r\n                            </Flex>\r\n                            <Flex className=\"footerContainer\" vAlign=\"end\" hAlign=\"end\">\r\n                                <div className={this.state.message.canDownload ? \"\" : \"disabled\"}>\r\n                                    <Flex className=\"buttonContainer\" gap=\"gap.small\">\r\n                                        <Flex.Item push>\r\n                                            <Loader id=\"sendingLoader\" className=\"hiddenLoader sendingLoader\" size=\"smallest\" label={this.localize(\"ExportLabel\")} labelPosition=\"end\" />\r\n                                        </Flex.Item>\r\n                                        <Flex.Item>\r\n                                            <TooltipHost content={!this.state.message.sendingCompleted ? \"\" : (this.state.message.canDownload ? \"\" : this.localize(\"ExportButtonProgressText\"))} calloutProps={{ gapSpace: 0 }}>\r\n                                                <Button icon={<DownloadIcon size=\"medium\" />} disabled={!this.state.message.canDownload || !this.state.message.sendingCompleted} content={this.localize(\"ExportButtonText\")} id=\"exportBtn\" onClick={this.onExport} primary />\r\n                                            </TooltipHost>\r\n                                        </Flex.Item>\r\n                                    </Flex>\r\n                                </div>\r\n                            </Flex>\r\n                        </Flex>\r\n                    </div>\r\n                );\r\n            }\r\n            else if (this.state.page === \"SuccessPage\") {\r\n                return (\r\n                    <div className=\"taskModule\">\r\n                        <Flex column className=\"formContainer\" vAlign=\"stretch\" gap=\"gap.small\">\r\n                            <div className=\"displayMessageField\">\r\n                                <br />\r\n                                <br />\r\n                                <div><span><AcceptIcon className=\"iconStyle\" xSpacing=\"before\" size=\"largest\" outline /></span>\r\n                                    <h1>{this.localize(\"ExportQueueTitle\")}</h1></div>\r\n                                <span>{this.localize(\"ExportQueueSuccessMessage1\")}</span>\r\n                                <br />\r\n                                <br />\r\n                                <span>{this.localize(\"ExportQueueSuccessMessage2\")}</span>\r\n                                <br />\r\n                                <span>{this.localize(\"ExportQueueSuccessMessage3\")}</span>\r\n                            </div>\r\n                            <Flex className=\"footerContainer\" vAlign=\"end\" hAlign=\"end\" gap=\"gap.small\">\r\n                                <Flex className=\"buttonContainer\">\r\n                                    <Button content={this.localize(\"CloseText\")} id=\"closeBtn\" onClick={this.onClose} primary />\r\n                                </Flex>\r\n                            </Flex>\r\n                        </Flex>\r\n                    </div>\r\n                );\r\n            }\r\n            else {\r\n                return (\r\n                    <div className=\"taskModule\">\r\n                        <Flex column className=\"formContainer\" vAlign=\"stretch\" gap=\"gap.small\">\r\n                            <div className=\"displayMessageField\">\r\n                                <br />\r\n                                <br />\r\n                                <div><span></span>\r\n                                    <h1 className=\"light\">{this.localize(\"ExportErrorTitle\")}</h1></div>\r\n                                <span>{this.localize(\"ExportErrorMessage\")}</span>\r\n                            </div>\r\n                            <Flex className=\"footerContainer\" vAlign=\"end\" hAlign=\"end\" gap=\"gap.small\">\r\n                                <Flex className=\"buttonContainer\">\r\n                                    <Button content={this.localize(\"CloseText\")} id=\"closeBtn\" onClick={this.onClose} primary />\r\n                                </Flex>\r\n                            </Flex>\r\n                        </Flex>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    private onClose = () => {\r\n        microsoftTeams.tasks.submitTask();\r\n    }\r\n\r\n    private onExport = async () => {\r\n        let spanner = document.getElementsByClassName(\"sendingLoader\");\r\n        spanner[0].classList.remove(\"hiddenLoader\");\r\n        let payload = {\r\n            id: this.state.message.id,\r\n            teamId: this.state.teamId\r\n        };\r\n        await exportNotification(payload).then(() => {\r\n            this.setState({ page: \"SuccessPage\" });\r\n        }).catch(() => {\r\n            this.setState({ page: \"ErrorPage\" });\r\n        });\r\n    }\r\n\r\n    private getItemList = (items: string[]) => {\r\n        let resultedTeams: IListItem[] = [];\r\n        if (items) {\r\n            resultedTeams = items.map((element) => {\r\n                const resultedTeam: IListItem = {\r\n                    header: element,\r\n                    media: <Image src={ImageUtil.makeInitialImage(element)} avatar />\r\n                }\r\n                return resultedTeam;\r\n            });\r\n        }\r\n        return resultedTeams;\r\n    }\r\n    private renderAudienceSelection = () => {\r\n        if (this.state.message.teamNames && this.state.message.teamNames.length > 0) {\r\n            return (\r\n                <div>\r\n                    <h3>{this.localize(\"SentToGeneralChannel\")}</h3>\r\n                    <List items={this.getItemList(this.state.message.teamNames)} />\r\n                </div>);\r\n        } else if (this.state.message.rosterNames && this.state.message.rosterNames.length > 0) {\r\n            return (\r\n                <div>\r\n                    <h3>{this.localize(\"SentToRosters\")}</h3>\r\n                    <List items={this.getItemList(this.state.message.rosterNames)} />\r\n                </div>);\r\n        } else if (this.state.message.groupNames && this.state.message.groupNames.length > 0) {\r\n            return (\r\n                <div>\r\n                    <h3>{this.localize(\"SentToGroups1\")}</h3>\r\n                    <span>{this.localize(\"SentToGroups2\")}</span>\r\n                    <List items={this.getItemList(this.state.message.groupNames)} />\r\n                </div>);\r\n        } else if (this.state.message.allUsers) {\r\n            return (\r\n                <div>\r\n                    <h3>{this.localize(\"SendToAllUsers\")}</h3>\r\n                </div>);\r\n        } else {\r\n            return (<div></div>);\r\n        }\r\n    }\r\n    private renderErrorMessage = () => {\r\n        if (this.state.message.errorMessage) {\r\n            return (\r\n                <div>\r\n                    <h3>{this.localize(\"Errors\")}</h3>\r\n                    <span>{this.state.message.errorMessage}</span>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (<div></div>);\r\n        }\r\n    }\r\n\r\n    private renderWarningMessage = () => {\r\n        if (this.state.message.warningMessage) {\r\n            return (\r\n                <div>\r\n                    <h3>{this.localize(\"Warnings\")}</h3>\r\n                    <span>{this.state.message.warningMessage}</span>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (<div></div>);\r\n        }\r\n    }\r\n}\r\n\r\nconst StatusTaskModuleWithTranslation = withTranslation()(StatusTaskModule);\r\nexport default StatusTaskModuleWithTranslation;","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { withTranslation, WithTranslation } from \"react-i18next\";\r\nimport * as AdaptiveCards from \"adaptivecards\";\r\nimport { Loader, Button, Text, List, Image, Flex, FilesPictureColoredIcon, ShiftActivityIcon } from '@fluentui/react-northstar';\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\n\r\nimport './sendConfirmationTaskModule.scss';\r\nimport { getDraftNotification, getConsentSummaries, sendDraftNotification } from '../../apis/messageListApi';\r\nimport {\r\n    getInitAdaptiveCard, setCardTitle, setCardImageLink, setCardSummary,\r\n    setCardAuthor, setCardBtn\r\n} from '../AdaptiveCard/adaptiveCard';\r\nimport { ImageUtil } from '../../utility/imageutility';\r\nimport { TFunction } from \"i18next\";\r\n\r\nexport interface IListItem {\r\n    header: string,\r\n    media: JSX.Element,\r\n}\r\n\r\nexport interface IMessage {\r\n    id: string;\r\n    title: string;\r\n    acknowledgements?: number;\r\n    reactions?: number;\r\n    responses?: number;\r\n    succeeded?: number;\r\n    failed?: number;\r\n    throttled?: number;\r\n    sentDate?: string;\r\n    imageLink?: string;\r\n    summary?: string;\r\n    author?: string;\r\n    buttonLink?: string;\r\n    buttonTitle?: string;\r\n}\r\n\r\nexport interface SendConfirmationTaskModuleProps extends RouteComponentProps, WithTranslation {\r\n}\r\n\r\nexport interface IStatusState {\r\n    message: IMessage;\r\n    loader: boolean;\r\n    teamNames: string[];\r\n    rosterNames: string[];\r\n    groupNames: string[];\r\n    allUsers: boolean;\r\n    messageId: number;\r\n}\r\n\r\nclass SendConfirmationTaskModule extends React.Component<SendConfirmationTaskModuleProps, IStatusState> {\r\n    readonly localize: TFunction;\r\n    private initMessage = {\r\n        id: \"\",\r\n        title: \"\"\r\n    };\r\n\r\n    private card: any;\r\n\r\n    constructor(props: SendConfirmationTaskModuleProps) {\r\n        super(props);\r\n        this.localize = this.props.t;\r\n        this.card = getInitAdaptiveCard(this.localize);\r\n\r\n        this.state = {\r\n            message: this.initMessage,\r\n            loader: true,\r\n            teamNames: [],\r\n            rosterNames: [],\r\n            groupNames: [],\r\n            allUsers: false,\r\n            messageId: 0,\r\n        };\r\n    }\r\n\r\n    public componentDidMount() {\r\n        microsoftTeams.initialize();\r\n\r\n        let params = this.props.match.params;\r\n\r\n        if ('id' in params) {\r\n            let id = params['id'];\r\n            this.getItem(id).then(() => {\r\n                getConsentSummaries(id).then((response) => {\r\n                    this.setState({\r\n                        teamNames: response.data.teamNames.sort(),\r\n                        rosterNames: response.data.rosterNames.sort(),\r\n                        groupNames: response.data.groupNames.sort(),\r\n                        allUsers: response.data.allUsers,\r\n                        messageId: id,\r\n                    }, () => {\r\n                        this.setState({\r\n                            loader: false\r\n                        }, () => {\r\n                            setCardTitle(this.card, this.state.message.title);\r\n                            setCardImageLink(this.card, this.state.message.imageLink);\r\n                            setCardSummary(this.card, this.state.message.summary);\r\n                            setCardAuthor(this.card, this.state.message.author);\r\n                            if (this.state.message.buttonTitle && this.state.message.buttonLink) {\r\n                                setCardBtn(this.card, this.state.message.buttonTitle, this.state.message.buttonLink);\r\n                            }\r\n\r\n                            let adaptiveCard = new AdaptiveCards.AdaptiveCard();\r\n                            adaptiveCard.parse(this.card);\r\n                            let renderedCard = adaptiveCard.render();\r\n                            document.getElementsByClassName('adaptiveCardContainer')[0].appendChild(renderedCard);\r\n                            if (this.state.message.buttonLink) {\r\n                                let link = this.state.message.buttonLink;\r\n                                adaptiveCard.onExecuteAction = function (action) { window.open(link, '_blank'); };\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private getItem = async (id: number) => {\r\n        try {\r\n            const response = await getDraftNotification(id);\r\n            this.setState({\r\n                message: response.data\r\n            });\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        if (this.state.loader) {\r\n            return (\r\n                <div className=\"Loader\">\r\n                    <Loader />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"taskModule\">\r\n                    <Flex column className=\"formContainer\" vAlign=\"stretch\" gap=\"gap.small\">\r\n                        <Flex className=\"scrollableContent\" gap=\"gap.small\">\r\n                            <Flex.Item size=\"size.half\">\r\n                                <Flex column className=\"formContentContainer\">\r\n                                    <h3>{this.localize(\"ConfirmToSend\")}</h3>\r\n                                    <span>{this.localize(\"SendToRecipientsLabel\")}</span>\r\n\r\n                                    <div className=\"results\">\r\n                                        {this.renderAudienceSelection()}\r\n                                    </div>                                    \r\n                                </Flex>\r\n                            </Flex.Item>\r\n                            <Flex.Item size=\"size.half\">\r\n                                <div className=\"adaptiveCardContainer\">\r\n                                </div>\r\n                            </Flex.Item>\r\n                        </Flex>\r\n                        <Flex className=\"footerContainer\" vAlign=\"end\" hAlign=\"end\">\r\n                            <Flex className=\"buttonContainer\" gap=\"gap.small\">\r\n                                <Flex.Item push>\r\n                                    <Loader id=\"sendingLoader\" className=\"hiddenLoader sendingLoader\" size=\"smallest\" label={this.localize(\"PreparingMessageLabel\")} labelPosition=\"end\" />\r\n                                </Flex.Item>\r\n                                <Button content={this.localize(\"Send\")} id=\"sendBtn\" onClick={this.onSendMessage} primary />\r\n                            </Flex>\r\n                        </Flex>\r\n                    </Flex>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    private onSendMessage = () => {\r\n        let spanner = document.getElementsByClassName(\"sendingLoader\");\r\n        spanner[0].classList.remove(\"hiddenLoader\");\r\n        sendDraftNotification(this.state.message).then(() => {\r\n            microsoftTeams.tasks.submitTask();\r\n        });\r\n    }\r\n\r\n    private getItemList = (items: string[]) => {\r\n        let resultedTeams: IListItem[] = [];\r\n        if (items) {\r\n            resultedTeams = items.map((element) => {\r\n                const resultedTeam: IListItem = {\r\n                    header: element,\r\n                    media: <Image src={ImageUtil.makeInitialImage(element)} avatar />\r\n                }\r\n                return resultedTeam;\r\n            });\r\n        }\r\n        return resultedTeams;\r\n    }\r\n\r\n    private renderAudienceSelection = () => {\r\n        if (this.state.teamNames && this.state.teamNames.length > 0) {\r\n            return (\r\n                <div key=\"teamNames\"> <span className=\"label\">{this.localize(\"TeamsLabel\")}</span>\r\n                    <List items={this.getItemList(this.state.teamNames)} />\r\n                </div>\r\n            );\r\n        } else if (this.state.rosterNames && this.state.rosterNames.length > 0) {\r\n            return (\r\n                <div key=\"rosterNames\"> <span className=\"label\">{this.localize(\"TeamsMembersLabel\")}</span>\r\n                    <List items={this.getItemList(this.state.rosterNames)} />\r\n                </div>);\r\n        } else if (this.state.groupNames && this.state.groupNames.length > 0) {\r\n            return (\r\n                <div key=\"groupNames\" > <span className=\"label\">{this.localize(\"GroupsMembersLabel\")}</span>\r\n                    <List items={this.getItemList(this.state.groupNames)} />\r\n                </div>);\r\n        } else if (this.state.allUsers) {\r\n            return (\r\n                <div key=\"allUsers\">\r\n                    <span className=\"label\">{this.localize(\"AllUsersLabel\")}</span>\r\n                    <div className=\"noteText\">\r\n                        <Text error content={this.localize(\"SendToAllUsersNote\")} />\r\n                    </div>\r\n                </div>);\r\n        } else {\r\n            return (<div></div>);\r\n        }\r\n    }\r\n}\r\n\r\nconst sendConfirmationTaskModuleWithTranslation = withTranslation()(SendConfirmationTaskModule);\r\nexport default sendConfirmationTaskModuleWithTranslation;","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Text } from '@fluentui/react-northstar';\r\nimport './errorPage.scss';\r\n\r\nconst ErrorPage: React.FunctionComponent<RouteComponentProps> = props => {\r\n    const { t } = useTranslation();\r\n\r\n    function parseErrorMessage(): string {\r\n        const params = props.match.params;\r\n        if ('id' in params) {\r\n            const id = params['id'];\r\n            if (id === \"401\") {\r\n                return t(\"UnauthorizedErrorMessage\");\r\n            } else if (id === \"403\") {\r\n                return t(\"ForbiddenErrorMessage\");\r\n            }\r\n        }\r\n        return t(\"GeneralErrorMessage\");\r\n    }\r\n\r\n    return (\r\n        <Text content={parseErrorMessage()} className=\"error-message\" error size=\"medium\" />\r\n    );\r\n};\r\n\r\nexport default ErrorPage;","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport React from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Text, Button } from \"@fluentui/react-northstar\";\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\nimport \"./signInPage.scss\";\r\nimport i18n from \"../../i18n\";\r\n\r\nconst SignInPage: React.FunctionComponent<RouteComponentProps> = props => {\r\n    const { t } = useTranslation();\r\n    const errorMessage = t(\"SignInPromptMessage\");\r\n\r\n    function onSignIn() {\r\n        microsoftTeams.authentication.authenticate({\r\n            url: window.location.origin + \"/signin-simple-start\",\r\n            successCallback: () => {\r\n                console.log(\"Login succeeded!\");\r\n                window.location.href = \"/messages\";\r\n            },\r\n            failureCallback: (reason) => {\r\n                console.log(\"Login failed: \" + reason);\r\n                window.location.href = `/errorpage?locale=${i18n.language}`;\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in-content-container\">\r\n            <Text\r\n                content={errorMessage}\r\n                size=\"medium\"\r\n            />\r\n            <div className=\"space\"></div>\r\n            <Button content={t(\"SignIn\")} primary className=\"sign-in-button\" onClick={onSignIn} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignInPage;\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\nimport { getAuthenticationConsentMetadata } from '../../apis/messageListApi';\r\n\r\nconst SignInSimpleStart: React.FunctionComponent = () => {\r\n    useEffect(() => {\r\n        microsoftTeams.initialize();\r\n\r\n        microsoftTeams.getContext(context => {\r\n            const windowLocationOriginDomain = window.location.origin.replace(\"https://\", \"\");\r\n            const login_hint = context.upn ? context.upn : \"\";\r\n\r\n            getAuthenticationConsentMetadata(windowLocationOriginDomain, login_hint).then(result => {\r\n                window.location.assign(result.data);\r\n            });\r\n        });\r\n    });\r\n\r\n    return (\r\n        <></>\r\n    );\r\n};\r\n\r\nexport default SignInSimpleStart;","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\n\r\nconst SignInSimpleEnd: React.FunctionComponent = () => {\r\n    // Parse hash parameters into key-value pairs\r\n    function getHashParameters() {\r\n        const hashParams: any = {};\r\n        window.location.hash.substr(1).split(\"&\").forEach(function (item) {\r\n            let s = item.split(\"=\"),\r\n                k = s[0],\r\n                v = s[1] && decodeURIComponent(s[1]);\r\n            hashParams[k] = v;\r\n        });\r\n        return hashParams;\r\n    }\r\n\r\n    useEffect(() => {\r\n        microsoftTeams.initialize();\r\n\r\n        const hashParams: any = getHashParameters();\r\n        if (hashParams[\"error\"]) {\r\n            // Authentication/authorization failed\r\n            microsoftTeams.authentication.notifyFailure(hashParams[\"error\"]);\r\n        } else if (hashParams[\"id_token\"]) {\r\n            // Success\r\n            microsoftTeams.authentication.notifySuccess();\r\n        } else {\r\n            // Unexpected condition: hash does not contain error or access_token parameter\r\n            microsoftTeams.authentication.notifyFailure(\"UnexpectedFailure\");\r\n        }\r\n    });\r\n\r\n    return (\r\n        <></>\r\n    );\r\n};\r\n\r\nexport default SignInSimpleEnd;","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport React, { Suspense } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Configuration from './components/config';\r\nimport TabContainer from './components/TabContainer/tabContainer';\r\nimport NewMessage from './components/NewMessage/newMessage';\r\nimport StatusTaskModule from './components/StatusTaskModule/statusTaskModule';\r\nimport './App.scss';\r\nimport { Provider, teamsTheme, teamsDarkTheme, teamsHighContrastTheme } from '@fluentui/react-northstar'\r\nimport SendConfirmationTaskModule from './components/SendConfirmationTaskModule/sendConfirmationTaskModule';\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\nimport { TeamsThemeContext, getContext, ThemeStyle } from 'msteams-ui-components-react';\r\nimport ErrorPage from \"./components/ErrorPage/errorPage\";\r\nimport SignInPage from \"./components/SignInPage/signInPage\";\r\nimport SignInSimpleStart from \"./components/SignInPage/signInSimpleStart\";\r\nimport SignInSimpleEnd from \"./components/SignInPage/signInSimpleEnd\";\r\nimport { updateLocale } from './i18n';\r\nimport i18n from 'i18next';\r\n\r\nexport interface IAppState {\r\n    theme: string;\r\n    themeStyle: number;\r\n}\r\n\r\nclass App extends React.Component<{}, IAppState> {\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            theme: \"\",\r\n            themeStyle: ThemeStyle.Light,\r\n        }\r\n    }\r\n\r\n    public componentDidMount() {\r\n        microsoftTeams.initialize();\r\n        microsoftTeams.getContext((context) => {\r\n            let theme = context.theme || \"\";\r\n            this.updateTheme(theme);\r\n            this.setState({\r\n                theme: theme\r\n            });\r\n        });\r\n\r\n        microsoftTeams.registerOnThemeChangeHandler((theme) => {\r\n            this.updateTheme(theme);\r\n            this.setState({\r\n                theme: theme,\r\n            }, () => {\r\n                this.forceUpdate();\r\n            });\r\n        });\r\n\r\n        updateLocale();\r\n    }\r\n\r\n    public setThemeComponent = () => {\r\n        const rtl = i18n.dir() === \"rtl\";\r\n\r\n        if (this.state.theme === \"dark\") {\r\n            return (\r\n                <Provider theme={teamsDarkTheme} rtl={rtl}>\r\n                    <div className=\"darkContainer\">\r\n                        {this.getAppDom()}\r\n                    </div>\r\n                </Provider>\r\n            );\r\n        }\r\n        else if (this.state.theme === \"contrast\") {\r\n            return (\r\n                <Provider theme={teamsHighContrastTheme} rtl={rtl}>\r\n                    <div className=\"highContrastContainer\">\r\n                        {this.getAppDom()}\r\n                    </div>\r\n                </Provider>\r\n            );\r\n        } else {\r\n            return (\r\n                <Provider theme={teamsTheme} rtl={rtl}>\r\n                    <div className=\"defaultContainer\">\r\n                        {this.getAppDom()}\r\n                    </div>\r\n                </Provider>\r\n            );\r\n        }\r\n    }\r\n\r\n    private updateTheme = (theme: string) => {\r\n        if (theme === \"dark\") {\r\n            this.setState({\r\n                themeStyle: ThemeStyle.Dark\r\n            });\r\n        } else if (theme === \"contrast\") {\r\n            this.setState({\r\n                themeStyle: ThemeStyle.HighContrast\r\n            });\r\n        } else {\r\n            this.setState({\r\n                themeStyle: ThemeStyle.Light\r\n            });\r\n        }\r\n    }\r\n\r\n    public getAppDom = () => {\r\n        const context = getContext({\r\n            baseFontSize: 10,\r\n            style: this.state.themeStyle\r\n        });\r\n        return (\r\n            <TeamsThemeContext.Provider value={context}>\r\n                <Suspense fallback={<div></div>}>\r\n                    <div className=\"appContainer\">\r\n                        <BrowserRouter>\r\n                            <Switch>\r\n                                <Route exact path=\"/configtab\" component={Configuration} />\r\n                                <Route exact path=\"/messages\" component={TabContainer} />\r\n                                <Route exact path=\"/newmessage\" component={NewMessage} />\r\n                                <Route exact path=\"/newmessage/:id\" component={NewMessage} />\r\n                                <Route exact path=\"/viewstatus/:id\" component={StatusTaskModule} />\r\n                                <Route exact path=\"/sendconfirmation/:id\" component={SendConfirmationTaskModule} />\r\n                                <Route exact path=\"/errorpage\" component={ErrorPage} />\r\n                                <Route exact path=\"/errorpage/:id\" component={ErrorPage} />\r\n                                <Route exact path=\"/signin\" component={SignInPage} />\r\n                                <Route exact path=\"/signin-simple-start\" component={SignInSimpleStart} />\r\n                                <Route exact path=\"/signin-simple-end\" component={SignInSimpleEnd} />\r\n                            </Switch>\r\n                        </BrowserRouter>\r\n                    </div>\r\n                </Suspense>\r\n            </TeamsThemeContext.Provider>\r\n        );\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div>\r\n                {this.setThemeComponent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const selectedMessageReducer = (selectedMessage = null, action: { type: string; payload: any; }) => {\r\n    if (action.type === 'MESSAGE_SELECTED') {\r\n        return action.payload;\r\n    }\r\n    return selectedMessage;\r\n}\r\n\r\nexport const messagesListReducer = (messages = [], action: { type: string; payload: any; }) => {\r\n    if (action.type === 'FETCH_MESSAGES') {\r\n        return action.payload\r\n    }\r\n    return messages;\r\n};\r\n\r\nexport const draftmessagesListReducer = (draftMessages = [], action: { type: string; payload: any; }) => {\r\n    if (action.type === 'FETCH_DRAFTMESSAGES') {\r\n        return action.payload\r\n    }\r\n    return draftMessages;\r\n};\r\n\r\nexport default combineReducers({\r\n    messagesList: messagesListReducer,\r\n    draftMessagesList: draftmessagesListReducer,\r\n    selectedMessage: selectedMessageReducer,\r\n});","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reducers from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}